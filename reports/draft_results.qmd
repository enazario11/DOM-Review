---
title: "DOM bridges and barriers: systematic review and survey"
author: "Emily Nazario | UC Santa Cruz | enazario'@'ucsc.edu"
date: "`r Sys.Date()`"
format:
 html: 
  self-contained: true
editor: visual
toc: TRUE
toc-title: "On this page"
theme: yeti
fontcolor: "#134f5c"
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(tidyquant)
library(here)
library(kableExtra)
library(waffle)
library(extrafont)
library(hrbrthemes)
library(patchwork)
library(ggalluvial)
library(ggrepel)
library(forcats)

#lit data
code_freq <- read.csv(here("data/code_freq_lit.csv"))
code_vars <- read.csv(here("data/code_w_vars_lit.csv"))
keywords <- read.csv(here("data/keywords.csv"))
code_rel <- read.csv(here("data/code_rel.csv"))

#survey data
code_vars_s <- read.csv(here("data/surveys/code_w_vars.csv"))
code_freq_s <- read.csv(here("data/surveys/code_freq.csv"))

#change codes to new names 
  #code_freq
    #sp br  
code_freq$code_cat <- replace(code_freq$code_cat, code_freq$code_cat == "Species bridge", "Ecological bridge")
code_freq$code_cat <- replace(code_freq$code_cat, code_freq$code_cat == "Species barrier", "Ecological barrier")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Limited Prey Resources", "TargetÂ species is a prey specialist")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Fine Scale management required", "Fine-scale management appropriate for target species")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Migratory and/or dynamic range", "Highly mobile target species")
code_freq$code_name[code_freq$code_cat == "Ecological bridge" & code_freq$code_name == "Climate change"] <- "Expected climate change induced range shifts"
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Known Species Nat History", "Life history information available for target species")

    #data br
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Advances in Tech", "Access to advanced technology and techniques")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Scale appropriate for system", "Management scale aligns with system needs")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Availability for species", "Target species data availability")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Stakeholder/Anthropogenic Data Access", "Resource use data availability")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Enviro Access", "Abiotic data availability")

    #soc br
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Open Communication or Co-Mngmt in place", "Co-management and communication")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Pre-existing regulation & management institutions", "Pre-existing regulation and management institutions")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "DOM implementation feasible (Socio-econ)", "Feasibility")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Resource Availability (economical)", "Resource availability")

  #sp ba 
code_freq$code_cat[code_freq$code_name == "Model Abuse"] <- "Data barrier"
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Switch to multi-species mngmnt", "Need for multispecies management")

  #data ba
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Gaps and Accuracy", "Gaps and inaccuracy")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Model Abuse", "Model abuse")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Mismatch in scale", "Management scales do not align with system needs")
code_freq$code_cat[code_freq$code_name == "Climate change"] <- "Data barrier"
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Climate change", "Climate change adding uncertainty to target species habitat use")

  #soc ba
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Unintended consequences", "Indirect socioeconomic consequences")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Communication & Distribution", "Poor communication and outreach")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Recipient participation", "Poor program implementation")

theme_ms <- function(){
  theme_minimal() %+replace%    
    theme(axis.text = element_text(size = 14, color = "black"), 
          axis.title = element_text(size = 16, color = "black"), 
          strip.text = element_text(size = 13, color = "black"))
}

```

## Questions

**Which themes appear in both sources?**

**What new information have surveys added beyond what was already written in the literature?**

**How do themes vary between fishing vs. shipping contexts?**

**How do themes vary with positionality of the respondent (surveys only)?**

## Result 1: Bridges and barriers according to review and survey

Here I've presented three options for presenting the themes and sub-themes identified in the review and surveys. I'd love feedback on which option or combination of options best visualize the codes! Depending on your feedback, I'll then spend time cleaning up the best option.

### Option 1 - Sankey diagram

Plot below only presents the review themes and sub-themes. If this is the best way to communicate the codes, I will add a diagram visualizing the survey codes.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 15
#| fig-height: 15

#calc props for sankey_df csv (fine scale codes are raw totals from code_freq file)
sum_codes <- sum(code_freq$total) #710 codes
code_freq %>% 
  group_by(bridge_barr) %>% 
  summarise(totals = sum(total))

code_freq %>% 
  group_by(code_cat) %>% 
  summarise(totals = sum(total))


#load sankey df
sankey_df <- read.csv(here("data/sankey_freq.csv"))

sankey_df$code_cat <- factor(sankey_df$code_cat, levels = c("Ecological barrier", "Data barrier", "Social barrier", "Data bridge", "Ecological bridge", "Social bridge"))

sankey_df <- sankey_df %>%
mutate(sum_codes = sum(total), 
      perc_codes = (total/sum_codes)*100, 
      round_perc = round(perc_codes, 0))

ggplot(data = sankey_df,
       aes(axis1 = fct_reorder(bridge_barr, -perc_codes), axis2 = fct_reorder(code_cat, -perc_codes), axis3 = fct_reorder(code_name, -perc_codes), y = perc_codes)) +
  geom_alluvium(aes(fill = code_cat, color = code_cat), size = 1.5, alpha = 0.8, width = 0.05) +
  geom_stratum(size = 1.5, color = "grey60", 
              width = c(1/12,1/12,1/3,1/3,1/3,1/3,1/3,1/3,1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18)) +
  geom_text(stat = "stratum", 
    aes(label = after_stat(stratum)),
    angle = c(90,90,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), 
    size = c(7,7,5,5,5,5,5,5,4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4), 
    nudge_y = c(0,0,0,0,0,0,0,0,0, #poor communication and outreach
                0.5, #model abuse
                1, #Discontinuity
                1.5, #indirect socioeconomic consequences
                1.8, #target species is a prey specialist
                2, #resource availability
                2, #climate change adding uncertainty
                2, #data transparency
                2, #need for multi-species management
                2, #distinct habitat preference
                2, #fine scale management
                1.5, #management scale system needs
                2, #management scale aligns
                0.8, #feasibility
                0,0,0,0,0,0,0,0,0,0,0,0,0,0), 
    nudge_x = c(-0.01,-0.01,0,0,0,0,0,0,0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,   0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05), 
    hjust = c(0.5, 0.5, 0.5,0.5,0.5,0.5,0.5,0.5,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) +

  xlim(0.89, 3.6) +
  ylim(-1, 100)+
  labs(y = "Proportion of all codes (%)", x = "") +
  theme_minimal()+
  theme(axis.text.y = element_text(size = 14), 
        axis.title.y = element_text(size = 16), 
        legend.position = "none", 
        axis.text.x = element_blank(), 
        panel.grid.major = element_blank())+
  scale_fill_manual(values = c("#F48136", "#F46036", "#F44336", "#CFE2F3", "#C5E0B4", "#45818E"))+
  scale_color_manual(values = c("#F48136", "#F46036", "#F44336", "#CFE2F3", "#C5E0B4", "#45818E"))
```

### Option 2 - Sunburst figure

Plots below are from an old draft of the review themes and sub-themes. If this is the nicest way to plot the codes, I will update the diagram and generate one for the survey themes as well.

![](images/sunburst.png){fig-align="center" width="100%"}

### Option 3 - Table

::: panel-tabset
#### Review: Bridge themes

```{r}
#| echo: false
#| message: false
#| warning: false

bri_codes <- code_freq %>% 
  filter(bridge_barr == "Bridge") %>% 
  subset(select = -c(total, bridge_barr))

colnames(bri_codes) <- c("Code category", "Code label")

bri_codes %>%
  kbl() %>%
  kable_styling()
```

#### Review: Barrier themes

```{r}
#| echo: false
#| message: false
#| warning: false

bar_codes <- code_freq %>% 
  filter(bridge_barr == "Barrier") %>% 
  subset(select = -c(total, bridge_barr))

colnames(bar_codes) <- c("Code category", "Code label")

bar_codes %>%
  kbl() %>%
  kable_styling()
```

#### Survey: Bridge themes

```{r}
#| echo: false
#| message: false
#| warning: false

bri_codes_s <- code_freq_s %>% 
  filter(bridge_barr == "Bridge") %>% 
  subset(select = -c(total, bridge_barr))

colnames(bri_codes_s) <- c("Code category", "Code label")

bri_codes_s %>%
  kbl() %>%
  kable_styling()

```

#### Survey: Barrier themes

```{r}
#| echo: false
#| message: false
#| warning: false

bar_codes_s <- code_freq_s %>% 
  filter(bridge_barr == "Barrier") %>% 
  subset(select = -c(total, bridge_barr)) 

colnames(bar_codes_s) <- c("Code category", "Code label")

bar_codes_s %>%
  kbl() %>%
  kable_styling()

```
:::

## Result 2: Codes by review and survey

### Result 2.1: Frequencies according to review and survey

Code appearance counts across all bridge **OR** barrier codes. The values represent counts of themes or sub-themes.

::: panel-tabset
### Literature

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| include: FALSE

  code_sum <- code_freq %>%
  #mutate(n_total = sum(total)) %>%
  #group_by(code_cat) %>% 
  #mutate(n_subtotal = sum(total)) %>%
  #summarise(value = n_subtotal/n_total) %>%
  rename("br_ba" = code_cat) %>%
  # mutate(percent_label = scales::percent(value, accuracy = 1), 
  #        percent = if_else(br_ba == "Data barrier" | br_ba == "Ecological barrier" | br_ba == "Social barrier", value, -value),
  #        code_level = if_else(br_ba %in% c("Ecological barrier", "Ecological bridge"), "Ecological bridge or barrier", 
  #                             if_else(br_ba %in% c("Data barrier", "Data bridge"), "Data bridge or barrier",
  #                             if_else(br_ba %in% c("Social barrier", "Social bridge"), "Social bridge or barrier", NA))), 
  #        code_brba = if_else(br_ba %in% c("Data bridge", "Ecological bridge", "Social bridge"), "bridge", "barrier")) %>%
  mutate(percent = if_else(br_ba == "Data barrier" | br_ba == "Ecological barrier" | br_ba == "Social barrier", -total, total),
         code_level = if_else(br_ba %in% c("Ecological barrier", "Ecological bridge"), "Ecological", 
                              if_else(br_ba %in% c("Data barrier", "Data bridge"), "Data",
                              if_else(br_ba %in% c("Social barrier", "Social bridge"), "Social", NA))), 
         code_brba = if_else(br_ba %in% c("Data bridge", "Ecological bridge", "Social bridge"), "bridge", "barrier")) %>%
  group_by(code_brba, code_level) %>%
  summarize(value = sum(percent)) %>%
  mutate(value_label = ifelse(code_brba == "barrier", value*-1, value)) %>%
  distinct()

code_sum$code_level <- factor(code_sum$code_level, levels = c("Social", "Ecological", "Data"))
code_sum$code_brba <- factor(code_sum$code_brba, levels = c("barrier", "bridge"))

ggplot(code_sum, aes(x = code_level, 
             y = value,
             fill = code_brba)) +
  geom_col(width = 0.7) +
  geom_text(aes(label = value_label),
            position = position_stack(vjust = 0.5),
            color = "black", 
            size = 5) +
  #ylim(-0.4,0.7)+
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"), labels = c("Barrier", "Bridge")) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.x =element_blank(),
        axis.text.y = element_text(size = 20, color = "black"),
        panel.grid = element_blank(),
        legend.position = c(-0.05, 1),
        legend.text = element_text(size = 16, color = "black"),
        strip.text.y.right = element_text(angle = 0, size = 16)) +
  geom_hline(yintercept = 0.0, linewidth = 1) + 
  labs(fill = "")+ 
  guides(fill = guide_legend(nrow = 1))

#ggsave("figures/ms_figs/all_freq/all_freq.png", width = 8, height = 6, units = ("in"))
#ggsave("figures/slides_svg/freq_lit.svg", width = 8, height = 6, units = ("in"))
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

#reformat data
code_sum_br <- code_freq %>%
  filter(bridge_barr == "Bridge") %>%
  #mutate(n_total = sum(total)) %>%
  #group_by(code_cat, code_name) %>%
  #summarise(value = total/n_total) %>% #percentages represent total number of bridge or barriers codes that code represents
  mutate(#percent = scales::percent(value, accuracy = 1), 
         code_name = factor(code_name)) %>%
  ungroup() %>%
  group_by(code_cat) %>%
  arrange(code_name, desc(total))


#plot
br_freq <- ggplot(code_sum_br, aes(x = total, y = reorder(code_name, total))) + 
  geom_point(size = 5, color = "lightskyblue3") + 
  # scale_x_continuous(limits = c(0, 30), 
  #                    breaks = seq(0, 30, 5), 
  #                    name = "Percent appearance (%)") +
  theme_minimal() +
  facet_wrap("code_cat", ncol = 1, scales = "free_y") +
  scale_x_continuous(limits = c(0, 75), 
                  #breaks = seq(0, 30, 5), 
                  name = "Sub-theme count (#)")+
  scale_y_discrete(position = "right") +
  theme(strip.placement = "outside",
        strip.text = element_text(face = "bold", size = 14, hjust = 0), 
        axis.text = element_text(size = 12, color = "black"), 
        axis.title = element_text(size = 14, color = "black")) +
  ylab("")

#ggsave("figures/ms_figs/all_freq/br_freq.png", width = 7, height = 8, units = c("in"))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

#reformat data
code_sum_ba <- code_freq %>%
  filter(bridge_barr == "Barrier") %>%
  #mutate(n_total = sum(total)) %>%
  #group_by(code_cat, code_name) %>%
  #summarise(value = total/n_total) %>% #percentages represent total number of bridge or barriers codes that code represents
  mutate(#percent = scales::percent(value, accuracy = 1), 
         code_name = factor(code_name)) %>%
  ungroup() %>%
  group_by(code_cat) %>%
  arrange(code_name, desc(total))

#plot
ba_freq <- ggplot(code_sum_ba, aes(x = total, y = reorder(code_name, total))) + 
  geom_point(size = 5, color = "goldenrod") + 
  scale_x_reverse(limits = c(75, 0), 
                     breaks = seq(0,60, 20), 
                     name = "Sub-theme count (#)") +
  theme_minimal() +
  facet_wrap("code_cat", ncol = 1, scales = "free_y") +
  theme(strip.placement = "outside",
        strip.text = element_text(face = "bold", size = 14, hjust = 1), 
        axis.text = element_text(size = 12, color = "black"), 
        axis.title = element_text(size = 14, color = "black")) +
  ylab("")

#ggsave("figures/ms_figs/all_freq/ba_freq.png", width = 7.5, height = 8, units = c("in"))

```

![](images/br_ba_freq.png){fig-align="center" width="10in", height = "12in"}

### Surveys

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

#theme bridge/barrier
 code_sum_s <- code_freq_s %>%
  rename("br_ba" = code_cat) %>%
  mutate(percent = if_else(br_ba == "Data barrier" | br_ba == "Ecological barrier" | br_ba == "Social barrier" | br_ba == "Implementation barrier", -total, total),
         code_level = if_else(br_ba %in% c("Ecological barrier", "Ecological bridge"), "Ecological", 
                              if_else(br_ba %in% c("Data barrier", "Data bridge"), "Data",
                              if_else(br_ba %in% c("Implementation barrier", "Implementation bridge"), "Implementation",
                              if_else(br_ba %in% c("Social barrier", "Social bridge"), "Social", NA)))),
         code_brba = if_else(br_ba %in% c("Data bridge", "Ecological bridge", "Social bridge", "Implementation bridge"), "bridge", "barrier")) %>%
  group_by(code_brba, code_level) %>%
  summarize(value = sum(percent)) %>%
  mutate(value_label = ifelse(code_brba == "barrier", value*-1, value)) %>%
  distinct()

code_sum_s$code_level <- factor(code_sum_s$code_level, levels = c("Implementation", "Social", "Ecological", "Data"))
code_sum_s$code_brba <- factor(code_sum_s$code_brba, levels = c("barrier", "bridge"))

all_freq_survey <- ggplot(code_sum_s, aes(x = code_level, 
             y = value,
             fill = code_brba)) +
  geom_col(width = 0.7) +
  geom_text(aes(label = value_label),
            position = position_stack(vjust = 0.5),
            color = "black", 
            size = 5) +
  #ylim(-0.55,0.7)+
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"), labels = c("Barrier", "Bridge")) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.x =element_blank(),
        axis.text.y = element_text(size = 20, color = "black"),
        panel.grid = element_blank(),
        legend.position = c(-0.05, 1),
        legend.text = element_text(size = 16, color = "black"),
        strip.text.y.right = element_text(angle = 0, size = 16)) +
  geom_hline(yintercept = 0.0, linewidth = 1) + 
  labs(fill = "")+ 
  guides(fill = guide_legend(nrow = 1))

#ggsave("figures/ms_figs/all_freq/all_freq_survey.png", width = 8, height = 6, units = ("in"))
#ggsave("figures/slides_svg/freq_survey.svg", width = 8, height = 6, units = ("in"))

#bridge freq
#reformat data
code_freq_s$code_cat <- factor(code_freq_s$code_cat, levels = c("Data bridge", "Data barrier", "Ecological bridge", "Ecological barrier", "Social bridge", "Social barrier", "Implementation bridge","Implementation barrier"))

code_sum_br_s <- code_freq_s %>%
  filter(bridge_barr == "Bridge") %>%
  #mutate(n_total = sum(total)) %>%
  #group_by(code_cat, code_name) %>%
  #summarise(value = total/n_total) %>% #percentages represent total number of bridge or barriers codes that code represents
  mutate(#percent = scales::percent(value, accuracy = 1), 
         code_name = factor(code_name)) %>%
  ungroup() %>%
  group_by(code_cat) %>%
  arrange(code_name, desc(total))

#plot
br_freq_s <- ggplot(code_sum_br_s, aes(x = total, y = reorder(code_name, total))) + 
  geom_point(size = 5, color = "lightskyblue3") + 
  # scale_x_continuous(limits = c(0, 30), 
  #                    breaks = seq(0, 30, 5), 
  #                    name = "Percent appearance (%)") +
  theme_minimal() +
  facet_wrap("code_cat", ncol = 1, scales = "free_y") +
  scale_x_continuous(limits = c(0, 20), 
                  #breaks = seq(0, 30, 5), 
                  name = "Sub-theme count (#)")+
  scale_y_discrete(position = "right") +
  theme(strip.placement = "outside",
        strip.text = element_text(face = "bold", size = 14, hjust = 0), 
        axis.text = element_text(size = 12, color = "black"), 
        axis.title = element_text(size = 14, color = "black")) +
  ylab("")

#ggsave("figures/ms_figs/all_freq/br_freq_survey.png", width = 6, height = 8, units = c("in"))

#barrier freq
#reformat data
code_sum_ba_s <- code_freq_s %>%
  filter(bridge_barr == "Barrier") %>%
  #mutate(n_total = sum(total)) %>%
  #group_by(code_cat, code_name) %>%
  #summarise(value = total/n_total) %>% #percentages represent total number of bridge or barriers codes that code represents
  mutate(#percent = scales::percent(value, accuracy = 1), 
         code_name = factor(code_name)) %>%
  ungroup() %>%
  group_by(code_cat) %>%
  arrange(code_name, desc(total))


#plot
ba_freq_s <- ggplot(code_sum_ba_s, aes(x = total, y = reorder(code_name, total))) + 
  geom_point(size = 5, color = "goldenrod") + 
  scale_x_reverse(limits = c(20, 0), 
                     breaks = seq(0, 20, 5), 
                     name = "Sub-theme count (#)") +
  theme_minimal() +
  facet_wrap("code_cat", ncol = 1, scales = "free_y") +
  theme(strip.placement = "outside",
        strip.text = element_text(face = "bold", size = 14, hjust = 1), 
        axis.text = element_text(size = 12, color = "black"), 
        axis.title = element_text(size = 14, color = "black")) +
  ylab("")

#ggsave("figures/ms_figs/all_freq/ba_freq_survey.png", width = 6, height = 8, units = c("in"))

```

![](images/br_ba_freq_survey.png){fig-align="center" width="10in", height = "12in"}
:::

### Result 2.2: Time series of top theme from literature, co-management

Grey is the number of DOM publications per year, while blue is the number of times co-management and communication was referenced. Whanted to see if this code was referenced more over time, but seems that it just tracks the number of DOM publications. Likely won't include.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 5
#| fig-align: center
#| include: false

code_ts <- code_vars %>% 
  mutate(year = str_extract_all(Doc, "\\d+\\.?\\d*"), 
         year = as.Date(as.character(year), format = "%Y"), 
         year = year(year)) %>%
  select(c(Doc, year, Co.management.and.communication)) %>%
  group_by(year) %>%
  summarise(n_appear = sum(Co.management.and.communication), 
            n_year = n()) 

colnames(code_ts) <- c("Year", "com", "pubs")

ggplot(code_ts, aes(as.numeric(Year))) + 
  geom_path(aes(y = com), linewidth = 1.5, color = "dodgerblue4") + 
  geom_point(aes(y= com), size = 5, fill = "dodgerblue4", color = "black", shape = 21) + 
  geom_path(aes(y = pubs), linewidth = 1.5, color = "grey60") + 
  geom_point(aes(y = pubs), size = 5, fill = "grey60", color = "black", shape = 21) +
  xlab("") +
  ylab("Count (#)") +
  theme_minimal() + 
  theme(axis.text = element_text(size = 14, color = "black"), 
        axis.title = element_text(size = 16, color = "black")) 
```

### Result 2.3: Heat maps of theme co-occurence

This heatmap represents number of times two codes co-occurered together in the same article, or "theme co-occurence". I have filtered totals greater than or equal to 11, which was the 90% quantile of the co-occurrence total data set. Blue text represents data bridges and barriers, grey text represents ecological bridges and barriers, and orange text represents social bridges and barriers.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 5
#| fig-align: center
#| include: FALSE

code_rel_melt <- reshape::melt(code_rel)
code_rel_melt$variable <- gsub(".", " ", code_rel_melt$variable, fixed = TRUE)

code_rel_melt <- code_rel_melt %>%
  separate(Code.System, c("key", "code1"), "> ", convert = TRUE) 

code_rel_melt$key <- str_trim(code_rel_melt$key)

colnames(code_rel_melt) <- c("brba_code1", "code1", "code2", "total")

#add brba column to second code col
code_rel_melt2 <- code_rel_melt
code_rel_melt2$brba_code2 <- NA

code_rel_melt2$code2[code_rel_melt2$code2 == "Fine scale management appropriate for target species"] <- "Fine-scale management appropriate for target species"
code_rel_melt2$code2[code_rel_melt2$code2 == "Pre existing regulation and management institutions"] <- "Pre-existing regulation and management institutions"
code_rel_melt2$code2[code_rel_melt2$code2 == "Co management and communication"] <- "Co-management and communication"

for(i in 1:nrow(code_rel_melt2)){
  code_temp = code_rel_melt2$code2[i]

  brba_temp = code_rel_melt2 %>% filter(code1 == code_temp & code2 == code_temp)
  brba_code_temp = brba_temp$brba_code1[1]

  code_rel_melt2$brba_code2[i] <- brba_code_temp
}

code_rel_melt2$brba_code2[code_rel_melt2$code2 == "Target species is a prey specialist"] <- "Ecological bridge"

group_colors = c("Data Bridge" = "dodgerblue4", "Data Barrier" = "dodgerblue4", "Ecological Bridge" = "honeydew4", "Ecological Barrier" = "honeydew4", "Social Bridge" = "darkorange4", "Social Barrier" = "darkorange4")

code_rel_melt_h <- code_rel_melt2 %>%
  filter(total >= 11) %>%
  mutate(bor_box = ifelse(total >= 11, "TRUE", "FALSE"), 
        bor_box = as.factor(bor_box), 
        code1 = as.factor(code1), 
        code2 = as.factor(code2))

code_rel_melt_h$bor_box <- factor(code_rel_melt_h$bor_box, levels = c("TRUE", "FALSE"))

code_rel_melt_h <- code_rel_melt_h %>%
  mutate(code1 = reorder(code1, -total, FUN = mean),
         code2 = reorder(code2, total, FUN = mean))

unique_x_groups <- code_rel_melt_h %>%
distinct(code1, brba_code1) %>%
arrange(code1)

unique_y_groups <- code_rel_melt_h %>%
distinct(code2, brba_code2) %>%
arrange(code2)

x_colors <- setNames(group_colors[unique_x_groups$brba_code1], unique_x_groups$code1)
y_colors <- setNames(group_colors[unique_y_groups$brba_code2], unique_y_groups$code2)

ggplot(code_rel_melt_h, aes(x = code1, y = reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) + 
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.3, size = 14, face = "bold", color = x_colors[levels(code_rel_melt_h$code1)]), 
      axis.text.y = element_text(size = 14, face = "bold", color = y_colors[levels(code_rel_melt_h$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")

#ggsave("figures/ms_figs/heat_tile.png", width = 10, height = 8, units = c("in"))

```

![](images/heat_tile_ai.png){fig-align="center" width="10in", height = "8in"}

## Result 3: Variations by industry

### 3.1: Management and conservation problems DOM has been used to address

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 9
#| fig-height: 5
#| fig-align: center

code_vars$broad_location <- as.factor(code_vars$broad_location)
codes_LU <- code_vars[!duplicated(code_vars$Lit_unit), ]

consv <- codes_LU %>%
  gather(col, consv_topic, reason1:reason3) %>%
  select(consv_topic)

consv_s <- consv %>%
  group_by(consv_topic) %>%
  filter(consv_topic != "NA") %>%
  summarise(count = n()) %>%
  ungroup() %>%
  mutate(perc = count/sum(count)*100) 

consv_bar <- ggplot(consv_s) +
  geom_bar(aes(x = perc, y = reorder(consv_topic, perc)), fill = "dodgerblue4", width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     expand = c(0,0), 
                     limits = c(0, 45))+
  scale_y_discrete(expand = expansion(add = c(0,0))) + 
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Arial", size = 12)) + 
  geom_text(aes(x = perc, y = consv_topic, label = consv_topic),
    hjust = 0,
    nudge_x = 0.3,
    colour = "dodgerblue4",
    family = "Arial",
    size = 3.5)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Arial",
      size = 13)
  )

consv_bar

consv <- codes_LU %>%
  gather(col, consv_topic, reason1:reason3) %>%
  gather(test, fishery_channel, fishery_or_channel1:fishery_or_channel4) %>%
  select(c(consv_topic, fishery_channel)) %>%
  mutate(consv_bin = paste0(consv_topic, " - ", fishery_channel))

consv_s <- consv %>%
  group_by(consv_topic, consv_bin) %>%
  filter(consv_topic != "NA") %>%
  summarise(count = n()) %>%
  ungroup() %>%
  mutate(perc = count/sum(count)*100) 

consv_bar2 <- ggplot(consv_s) +
  geom_bar(aes(x = perc, y = reorder(consv_bin, perc), fill = consv_topic), width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     expand = c(0,0), 
                     limits = c(0, 45))+
  scale_y_discrete(expand = expansion(add = c(0,0))) + 
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Arial", size = 12)) + 
  geom_text(aes(x = perc, y = consv_bin, label = consv_bin),
    hjust = 0,
    nudge_x = 0.3,
    colour = "dodgerblue4",
    family = "Arial",
    size = 3.5)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Arial",
      size = 13)
  )

consv_bar2
```

### 3.2: Fishing vs. shipping

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| include: false

#survey figs

#format data
freq_job_survey <- code_vars_s %>% 
  select(c(1, 21:54)) %>% 
  janitor::clean_names() %>%
  pivot_longer(2:35, names_to = "sub_theme", values_to = "total") %>%
  group_by(survey, sub_theme) %>%
  summarise(total = sum(total), 
            .groups = "drop") %>%
  mutate(fish_ship = ifelse(str_detect(survey, "WhaleWatch"), "Shipping", "Fishing")) 

lib_job_survey <- code_freq_s %>%
  mutate(id = paste(bridge_barr, code_cat, code_name, sep = "_")) %>% 
  select(id)

freq_job_survey$id <- NA
for(i in 1:nrow(freq_job_survey)){
  curr_code = freq_job_survey$sub_theme[i]
  curr_id = lib_job_survey$id[agrepl(curr_code, lib_job_survey$id, 6)]
  
  freq_job_survey$id[i] <- curr_id
  
}

freq_job_survey$id[freq_job_survey$sub_theme == "stigmatization"] <- "Barrier_Social barrier_Stigmatization"
freq_job_survey$id[freq_job_survey$sub_theme == "cost"] <- "Barrier_Social barrier_Cost"

freq_job_survey <- freq_job_survey %>%
  separate_wider_delim(id, delim = "_", names = c("bridge_barr", "code_cat", "code_name"))

freq_job_survey$bridge_barr <- factor(freq_job_survey$bridge_barr, levels = c("Bridge", "Barrier"))

#calculate proportions
freq_job_survey2 <- freq_job_survey %>%
  group_by(fish_ship, bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(fish_ship, bridge_barr, code_cat) %>% 
  mutate(n_subtotal = sum(total)) %>%
  reframe(value = (n_subtotal/n_total)*100) %>%
  ungroup() %>%
  mutate(code_level = if_else(code_cat %in% c("Ecological barrier", "Ecological bridge"), "Ecological bridge or barrier", 
                              if_else(code_cat %in% c("Data barrier", "Data bridge"), "Data bridge or barrier",
                              if_else(code_cat %in% c("Social barrier", "Social bridge"), "Social bridge or barrier", 
                              if_else(code_cat %in% c("Implementation bridge", "Implementation barrier"), "Implementation bridge or barrier", NA)))), 
          id = paste(fish_ship, bridge_barr, code_cat)) %>%
  distinct(id, .keep_all = TRUE)


#stacked bar plots
ggplot(freq_job_survey2, aes(fill=code_level, y=value, x=fish_ship)) + 
    geom_bar(position="stack", stat="identity") +
    scale_fill_manual(values = c("#CFE2F3", "#C5E0B4","royalblue4","#45818E")) +
    facet_wrap(~bridge_barr) +
    labs(fill = "") +
    guides(fill=guide_legend(nrow=2,byrow=TRUE))+
    theme_ms() +
    theme(legend.position = "top", 
          legend.justification = "left", 
          legend.text = element_text(size = 14, color = "black"))+
    xlab("") + 
    ylab("Proportion of theme (%)")

#ggsave("figures/ms_figs/industry/stack_survey.png", width = 7, height = 6, units = c("in"))
#ggsave("figures/slides_svg/stack_survey.svg", width = 7, height = 6, units = c("in"))

#radar plots
freq_job_survey3 <- freq_job_survey %>%
  # group_by(fish_ship, bridge_barr) %>%
  # mutate(n_total = sum(total)) %>%
  # ungroup() %>%
  # group_by(fish_ship, bridge_barr, code_name) %>%
  # mutate(n_subtotal = sum(total)) %>%
  # reframe(value = (n_subtotal/n_total)*100) %>%
  # ungroup() %>%
  #mutate(id = paste(fish_ship, bridge_barr, code_name)) %>%
  #distinct(id, .keep_all = TRUE) %>%
  #select(-c(id))
  group_by(fish_ship, bridge_barr, code_name) %>%
  summarise(value = sum(total))

top_survey <- freq_job_survey3 %>% 
                group_by(fish_ship, bridge_barr) %>% 
                arrange(desc(value)) %>% 
                top_n(3) %>% 
                ungroup() %>%
                select(code_name)

top_bridge <- freq_job_survey3 %>%
  ungroup() %>%
  subset(code_name %in% top_survey$code_name) %>% 
  filter(bridge_barr == "Bridge") %>%
  pivot_wider(names_from = code_name, values_from = value) %>% 
  select(-bridge_barr) %>%
  mutate_all(~replace_na(., 0)) 

top_barrier <- freq_job_survey3 %>%
  ungroup() %>%
  subset(code_name %in% top_survey$code_name) %>%
  filter(bridge_barr == "Barrier") %>% 
  pivot_wider(names_from = code_name, values_from = value) %>% 
  select(-bridge_barr) %>%
  mutate_all(~replace_na(., 0))

ggradar::ggradar(top_bridge,
        values.radar = c(0, 5, 10), 
        background.circle.colour = "white",
        axis.line.colour = "gray60",
        gridline.min.colour = "gray60",
        gridline.mid.colour = "gray60",
        gridline.max.colour = "gray60",
        group.colours = c("#F29325", "#007172"),#007172
        legend.position = "bottom", 
        fill = TRUE, 
        axis.label.size = 3)

#ggsave("figures/ms_figs/industry/radar_br_survey.png", height = 8, width = 8, units = c("in"))
#ggsave("figures/slides_svg/radar_br.svg", height = 8, width = 8, units = c("in"))

ggradar::ggradar(top_barrier,
        values.radar = c(0, 3, 6), 
        background.circle.colour = "white",
        axis.line.colour = "gray60",
        gridline.min.colour = "gray60",
        gridline.mid.colour = "gray60",
        gridline.max.colour = "gray60",
        group.colours = c("#F29325", "#007172"),#007172
        legend.position = "none", 
        fill = TRUE, 
        axis.label.size = 3)

#ggsave("figures/ms_figs/industry/radar_ba_survey.png", height = 8, width = 8, units = c("in"))
#ggsave("figures/slides_svg/radar_ba.svg", height = 8, width = 8, units = c("in"))

#get sample sizes of survey respondants by position
n_job_survey <- code_vars_s %>% 
  select(c(1, 21:54)) %>% 
  janitor::clean_names()

table(n_job_survey$survey)

```


```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| include: false

#literature figs

#format data
freq_job_lit <- code_vars %>% 
  select(c(1, 27:29, 33:60)) %>%
  janitor::clean_names() %>%
  pivot_longer(2:4, names_to = "test", values_to = "fish_ship") %>%
  select(-c(test)) %>%
  pivot_longer(2:29, names_to = "sub_theme", values_to = "total") %>%
  group_by(fish_ship, sub_theme) %>%
  summarise(total = sum(total), 
            .groups = "drop") %>%
  filter(fish_ship == "Bycatch" | fish_ship == "Ship strikes" | fish_ship == "Overfishing" | fish_ship == "Entanglement" | fish_ship == "Avoid fisheries discharge")

lib_job_lit <- code_freq %>%
  mutate(id = paste(bridge_barr, code_cat, code_name, sep = "_")) %>% 
  select(id)

freq_job_lit$id <- NA
for(i in 1:nrow(freq_job_lit)){
  curr_code = freq_job_lit$sub_theme[i]
  curr_id = lib_job_lit$id[agrepl(curr_code, lib_job_lit$id, 10)] #6 refers to the number of characters that can be diff
  
  freq_job_lit$id[i] <- curr_id
  
}

freq_job_lit$id[freq_job_lit$sub_theme == "abiotic_data_availability"] <- "Bridge_Data bridge_Abiotic data availability"
freq_job_lit$id[freq_job_lit$sub_theme == "abiotic_indicators_of_target_species_presence"] <- 
"Bridge_Ecological bridge_Abiotic indicators of target species presence"
freq_job_lit$id[freq_job_lit$sub_theme == "cost"] <- 
"Barrier_Social barrier_Cost"
freq_job_lit$id[freq_job_lit$sub_theme == "discontinuity"] <- 
"Barrier_Social barrier_Discontinuity"
freq_job_lit$id[freq_job_lit$sub_theme == "feasibility"] <- 
"Bridge_Social bridge_Feasibility"
freq_job_lit$id[freq_job_lit$sub_theme == "model_abuse"] <- 
"Barrier_Data barrier_Model abuse"
freq_job_lit$id[freq_job_lit$sub_theme == "resource_availability"] <- 
"Bridge_Social bridge_Resource availability"

freq_job_lit <- freq_job_lit %>%
  separate_wider_delim(id, delim = "_", names = c("bridge_barr", "code_cat", "code_name"))

freq_job_lit$bridge_barr <- factor(freq_job_lit$bridge_barr, levels = c("Bridge", "Barrier"))

freq_job_lit <- freq_job_lit %>%
  mutate(fish_ship = ifelse(fish_ship == "Ship strikes", "Shipping", "Fishing"))

#calculate proportions
freq_job_lit2 <- freq_job_lit %>%
  group_by(fish_ship, bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(fish_ship, bridge_barr, code_cat) %>% 
  mutate(n_subtotal = sum(total)) %>%
  reframe(value = (n_subtotal/n_total)*100) %>%
  ungroup() %>%
  mutate(code_level = if_else(code_cat %in% c("Ecological barrier", "Ecological bridge"), "Ecological bridge or barrier", 
                              if_else(code_cat %in% c("Data barrier", "Data bridge"), "Data bridge or barrier",
                              if_else(code_cat %in% c("Social barrier", "Social bridge"), "Social bridge or barrier", NA))), 
          id = paste(fish_ship, bridge_barr, code_cat)) %>%
  distinct(id, .keep_all = TRUE)


#stacked bar plots
ggplot(freq_job_lit2, aes(fill=code_level, y=value, x=fish_ship)) + 
    geom_bar(position="stack", stat="identity") +
    scale_fill_manual(values = c("#CFE2F3", "#C5E0B4","#45818E")) +
    facet_wrap(~bridge_barr) +
    labs(fill = "") +
    guides(fill=guide_legend(nrow=2,byrow=TRUE)) +
    theme_ms() +
    theme(legend.position = "top", 
          legend.justification = "left", 
          legend.text = element_text(size = 14, color = "black")) +
    xlab("") + 
    ylab("Proportion of theme (%)")

#ggsave("figures/ms_figs/industry/stack_lit.png", width = 7, height = 6, units = c("in"))

#radar plots
freq_job_lit3 <- freq_job_lit %>%
  # group_by(fish_ship, bridge_barr) %>%
  # mutate(n_total = sum(total)) %>%
  # ungroup() %>%
  # group_by(fish_ship, bridge_barr, code_name) %>% 
  # mutate(n_subtotal = sum(total)) %>%
  # reframe(value = (n_subtotal/n_total)*100) %>%
  # ungroup() %>%
  # mutate(id = paste(fish_ship, bridge_barr, code_name)) %>%
  # distinct(id, .keep_all = TRUE) %>%
  # select(-c(id)) %>%
  group_by(fish_ship, bridge_barr, code_name) %>%
  summarise(value = sum(total))

top_lit <- freq_job_lit3 %>% 
                group_by(fish_ship, bridge_barr) %>% 
                arrange(desc(value)) %>% 
                top_n(3) %>% 
                ungroup() %>%
                select(code_name)

top_bridge <- freq_job_lit3 %>%
  subset(code_name %in% top_lit$code_name) %>% 
  filter(bridge_barr == "Bridge") %>% 
  pivot_wider(names_from = code_name, values_from = value) %>% 
  ungroup() %>%
  select(-bridge_barr) %>%
  mutate_all(~replace_na(., 0))

top_barrier <- freq_job_lit3 %>%
  subset(code_name %in% top_lit$code_name) %>%
  filter(bridge_barr == "Barrier") %>% 
  pivot_wider(names_from = code_name, values_from = value) %>% 
  ungroup() %>%
  select(-bridge_barr) %>%
  mutate_all(~replace_na(., 0))

ggradar::ggradar(top_bridge,
        values.radar = c(0, 20, 40), 
        background.circle.colour = "white",
        axis.line.colour = "gray60",
        gridline.min.colour = "gray60",
        gridline.mid.colour = "gray60",
        gridline.max.colour = "gray60",
        group.colours = c("#F29325", "#007172"),
        legend.position = "bottom", 
        fill = TRUE, 
        axis.label.size = 3)

#ggsave("figures/ms_figs/industry/radar_br_lit.png", height = 8, width = 8, units = c("in"))

ggradar::ggradar(top_barrier,
        values.radar = c(0, 15, 35), 
        background.circle.colour = "white",
        axis.line.colour = "gray60",
        gridline.min.colour = "gray60",
        gridline.mid.colour = "gray60",
        gridline.max.colour = "gray60",
        group.colours = c("#F29325", "#007172"),
        legend.position = "none", 
        fill = TRUE, 
        axis.label.size = 3)

ggsave("figures/ms_figs/industry/radar_ba_lit.png", height = 8, width = 8, units = c("in"))


#get sample sizes of survey respondants by position
n_job_lit <- code_vars %>% 
  select(c(1, 27:29, 33:60)) %>%
  janitor::clean_names()  %>%
  pivot_longer(2:4, names_to = "test", values_to = "fish_ship") %>%
  select(-c(test)) %>%
  filter(fish_ship == "Bycatch" | fish_ship == "Ship strikes" | fish_ship == "Overfishing" | fish_ship == "Entanglement" | fish_ship == "Avoid fisheries discharge") %>%
  mutate(fish_ship = ifelse(fish_ship == "Ship strikes", "Shipping", "Fishing"))

table(n_job_lit$fish_ship)


```


::: panel-tabset

#### Literature

![](images/lit_combo.png){fig-align="center" width="5in", height = "8in"}

#### Surveys 

![](images/survey_combo.png){fig-align="center" width="5in", height = "8in"}


:::

## Result 4: Variations by position (survey only)

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| include: false


#survey figs

#format data
freq_pos_survey <- code_vars_s %>% 
  select(c(6:10, 21:54)) %>% 
  janitor::clean_names() %>%
  pivot_longer(1:5, names_to = "test", values_to = "position") %>%
  select(-c(test)) %>%
  pivot_longer(1:34, names_to = "sub_theme", values_to = "total") %>%
  group_by(position, sub_theme) %>%
  summarise(total = sum(total), 
            .groups = "drop") %>%
  drop_na(position)

lib_job_survey <- code_freq_s %>%
  mutate(id = paste(bridge_barr, code_cat, code_name, sep = "_")) %>% 
  select(id)

freq_pos_survey$id <- NA
for(i in 1:nrow(freq_pos_survey)){
  curr_code = freq_pos_survey$sub_theme[i]
  curr_id = lib_job_survey$id[agrepl(curr_code, lib_job_survey$id, 6)]
  
  freq_pos_survey$id[i] <- curr_id
  
}

freq_pos_survey$id[freq_pos_survey$sub_theme == "stigmatization"] <- "Barrier_Social barrier_Stigmatization"
freq_pos_survey$id[freq_pos_survey$sub_theme == "cost"] <- "Barrier_Social barrier_Cost"

freq_pos_survey <- freq_pos_survey %>%
  separate_wider_delim(id, delim = "_", names = c("bridge_barr", "code_cat", "code_name"))

freq_pos_survey$bridge_barr <- factor(freq_pos_survey$bridge_barr, levels = c("Bridge", "Barrier"))

#calculate proportions
freq_pos_survey2 <- freq_pos_survey %>%
  group_by(position, bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(position, bridge_barr, code_cat) %>% 
  mutate(n_subtotal = sum(total)) %>%
  reframe(value = (n_subtotal/n_total)*100) %>%
  ungroup() %>%
  mutate(code_level = if_else(code_cat %in% c("Ecological barrier", "Ecological bridge"), "Ecological bridge or barrier", 
                              if_else(code_cat %in% c("Data barrier", "Data bridge"), "Data bridge or barrier",
                              if_else(code_cat %in% c("Social barrier", "Social bridge"), "Social bridge or barrier", 
                              if_else(code_cat %in% c("Implementation bridge", "Implementation barrier"), "Implementation bridge or barrier", NA)))), 
          id = paste(position, bridge_barr, code_cat)) %>%
  distinct(id, .keep_all = TRUE)


#stacked bar plots
ggplot(freq_pos_survey2, aes(fill=code_level, y=value, x=position)) + 
    geom_bar(position="stack", stat="identity") +
    scale_fill_manual(values = c("#CFE2F3", "#C5E0B4","royalblue4","#45818E")) +
    facet_wrap(~bridge_barr) +
    labs(fill = "") +
    theme_ms() +
    theme(legend.position = "top", 
          legend.justification.top = "left", 
          legend.title = element_text(size = 16, color = "black"), 
          legend.text = element_text(size = 14, color = "black"))+
    guides(fill=guide_legend(nrow=2,byrow=TRUE))+
    xlab("") + 
    ylab("Proportion of theme (%)")+
    theme(axis.text.x = element_text(size = 14, color = "black", angle = 60, hjust = 1))

#ggsave("figures/ms_figs/position/stack_survey.png", width = 10, height = 8, units = c("in"))


#get sample sizes of survey respondants by position
n_pos_survey <- code_vars_s %>% 
  select(c(6:10, 21:54)) %>% 
  janitor::clean_names() %>%
  pivot_longer(1:5, names_to = "test", values_to = "position") %>%
  select(-c(test)) %>%
  drop_na(position)

table(n_pos_survey$position)

```

![](images/position.png){fig-align="center" width="8in", height = "6in"}

