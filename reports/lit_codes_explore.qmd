---
title: "DOM bridges and barriers: systematic review and end-user survey"
author: "Emily Nazario | UC Santa Cruz | enazario'@'ucsc.edu"
date: "`r Sys.Date()`"
format:
 html: 
  self-contained: true
editor: visual
toc: TRUE
toc-title: "On this page"
theme: yeti
fontcolor: "#134f5c"
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(tidyquant)
library(here)
library(kableExtra)
library(waffle)
library(extrafont)
library(hrbrthemes)
library(patchwork)
library(ggalluvial)
library(ggrepel)
library(forcats)

#lit data
code_freq <- read.csv(here("data/code_freq_lit.csv"))
codes_vars <- read.csv(here("data/code_w_vars_lit.csv"))
keywords <- read.csv(here("data/keywords.csv"))
code_rel <- read.csv(here("data/code_rel.csv"))

#survey data
code_vars_s <- read.csv(here("data/surveys/code_w_vars.csv"))
code_freq_s <- read.csv(here("data/surveys/code_freq.csv"))

#change codes to new names 
  #code_freq
    #sp br  
code_freq$code_cat <- replace(code_freq$code_cat, code_freq$code_cat == "Species bridge", "Ecological bridge")
code_freq$code_cat <- replace(code_freq$code_cat, code_freq$code_cat == "Species barrier", "Ecological barrier")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Limited Prey Resources", "Target species is a prey specialist")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Fine Scale management required", "Fine-scale management appropriate for target species")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Migratory and/or dynamic range", "Highly mobile target species")
code_freq$code_name[code_freq$code_cat == "Ecological bridge" & code_freq$code_name == "Climate change"] <- "Expected climate change induced range shifts"
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Known Species Nat History", "Life history information available for target species")

    #data br
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Advances in Tech", "Access to advanced technology and techniques")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Scale appropriate for system", "Management scale aligns with system needs")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Availability for species", "Target species data availability")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Stakeholder/Anthropogenic Data Access", "Resource use data availability")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Enviro Access", "Abiotic data availability")

    #soc br
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Open Communication or Co-Mngmt in place", "Co-management and communication")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Pre-existing regulation & management institutions", "Pre-existing regulation and management institutions")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "DOM implementation feasible (Socio-econ)", "Feasibility")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Resource Availability (economical)", "Resource availability")

  #sp ba 
code_freq$code_cat[code_freq$code_name == "Model Abuse"] <- "Data barrier"
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Switch to multi-species mngmnt", "Need for multispecies management")

  #data ba
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Gaps and Accuracy", "Gaps and inaccuracy")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Model Abuse", "Model abuse")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Mismatch in scale", "Management scales do not align with system needs")
code_freq$code_cat[code_freq$code_name == "Climate change"] <- "Data barrier"
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Climate change", "Climate change adding uncertainty to target species habitat use")

  #soc ba
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Unintended consequences", "Indirect socioeconomic consequences")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Communication & Distribution", "Poor communication and outreach")
code_freq$code_name <- replace(code_freq$code_name, code_freq$code_name == "Recipient participation", "Poor program implementation")

```

# Literature Review

## Selecting the literature that was included in this systematic review

In September 2024, a systematic search was completed using Web of Science to identify articles that discussed dynamic ocean management (DOM). Articles or documents published after this date were not included in this review. Articles were selected if they described factors contributing to the “success” of DOM, also termed here as a “bridge”, or that noted factors that should be addressed prior to using DOM approaches or support tools, also termed here as a “barrier”. In this systematic review, we coded bridges and barriers that were related to implemented or recommended DOM voluntary programs and/or enforced regulations, as well as those that were related to tool development (e.g., species spatial modeling tools such as EcoCast) that support dynamic management approaches.

During the initial search, the following table of terms were used. The "NEAR/5" operator was used to refine the search and ensure each of the terms in a given character string were found within one word of each other:

| Search term                |
|----------------------------|
| Dynamic ocean management   |
| Dynamic spatial management |
| Adaptive ocean management  |
| Dynamic ocean closures     |

: **Table 1.** List of terms used in the Web of Science search. Where spaces are found between words in a search term, the "NEAR/5" operator was added.

Works from the primary (i.e., peer-reviewed journals) and grey literature (e.g., theses, book chapters) were included, and this initial search resulted in 292 articles. Abstracts were skimmed for relevance, and a total of 141 articles were saved for further inspection An additional search using the NOAA Federal Register was also completed. Here, documents such as policy reports and planning documents were selected. This search resulted in 483 documents. The abstracts or content summaries for each of these documents were skimmed for relevance, and an additional 10 documents were saved for a full read through. Articles were excluded if DOM was mentioned or recommended, but there was no discussion as to why. Articles were also excluded if they discussed changes or updates to environmental data sources or remote sensing tools used to develop models supporting DOM, but DOM approaches were not specifically applied, recommended, or reviewed. Specific inclusion and exclusion criteria are described here:

| Inclusion | Exclusion |
|------------------------------------|:-----------------------------------|
| All cases where adaptive or near-real time forms of management or tools that support this form of management were discussed, even if the specific term 'Dynamic Ocean Management' was not explicitly used. | The term 'DOM' was mentioned, or even recommended, but there was no discussion as to why (e.g. SDM studies that suggest DOM applications as a next step for their model) |
| All cases where near real-time SDM tools or fleet-wide communication to avoid negative species interactions. | Articles that involved changes or updates to environmental data stores or remote sensing tools used for developing SDM tools to support DOM, but DOM was not specifically applied, recommended, or reviewed. |

The 151 articles were read by two reviewers and went through a final pass for determining inclusion. Articles that were referenced that seemed to discuss relevant topics were skimmed and their inclusion was determined. The final list of works analyzed for the review included 118 articles (i.e., primary literature, student theses, policy reports, and textbook chapters).

## Coding the bridges and barriers as identified in the literature

Two reviewers went through each of the 118 articles to identify text that was related to DOM bridges that were linked to the approach's success or were used as justification as to why DOM would be a good fit for that system/conservation problem. The reviewers also identified the barriers that hindered the efficacy of DOM or must be considered prior to its application. Through this effort, 19 “bridge” and 10 “barrier” categories were determined in the literature. “Bridge” and “barrier” factors were organized into four broader theme groups: ecological, social, and data. A table of the full list of codes/themes from the literature are depicted here. Please note that this is a draft of codes and that the sunburst diagrams need to be revised. I am also happy to modify the code/factor terminology throughout the study review process.

::: panel-tabset
### Bridges

```{r}
#| echo: false
#| message: false
#| warning: false

bri_codes <- code_freq %>% 
  filter(bridge_barr == "Bridge") %>% 
  subset(select = -c(total, bridge_barr))

colnames(bri_codes) <- c("Code category", "Code label")

bri_codes %>%
  kbl() %>%
  kable_styling()
```

![](images/bridges_old.png){fig-align="center" width="70%"}

### Barriers

```{r}
#| echo: false
#| message: false
#| warning: false

bar_codes <- code_freq %>% 
  filter(bridge_barr == "Barrier") %>% 
  subset(select = -c(total, bridge_barr))

colnames(bar_codes) <- c("Code category", "Code label")

bar_codes %>%
  kbl() %>%
  kable_styling()
```

![](images/barriers_old.png){fig-align="center" width="70%"}
:::

### Sankey diagram of literature code heirarchies

Here, each of the codes and their subcodes are presented. The presented percentages represent totals across all codes and codes closer to the top are codes that make up higher percentages of identified codes.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 15
#| fig-height: 15

#calc props for sankey_df csv (fine scale codes are raw totals from code_freq file)
sum_codes <- sum(code_freq$total) #710 codes
code_freq %>% 
  group_by(bridge_barr) %>% 
  summarise(totals = sum(total))

code_freq %>% 
  group_by(code_cat) %>% 
  summarise(totals = sum(total))


#load sankey df
sankey_df <- read.csv(here("data/sankey_freq.csv"))

sankey_df$code_cat <- factor(sankey_df$code_cat, levels = c("Ecological barrier", "Data barrier", "Social barrier", "Data bridge", "Ecological bridge", "Social bridge"))

sankey_df <- sankey_df %>%
mutate(sum_codes = sum(total), 
      perc_codes = (total/sum_codes)*100, 
      round_perc = round(perc_codes, 0))

ggplot(data = sankey_df,
       aes(axis1 = fct_reorder(bridge_barr, -perc_codes), axis2 = fct_reorder(code_cat, -perc_codes), axis3 = fct_reorder(code_name, -perc_codes), y = perc_codes)) +
  geom_alluvium(aes(fill = code_cat, color = code_cat), size = 1.5, alpha = 0.8, width = 0.05) +
  geom_stratum(size = 1.5, color = "grey60", 
              width = c(1/12,1/12,1/3,1/3,1/3,1/3,1/3,1/3,1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18, 1/18)) +
  geom_text(stat = "stratum", 
    aes(label = after_stat(stratum)),
    angle = c(90,90,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), 
    size = c(7,7,5,5,5,5,5,5,4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4), 
    nudge_y = c(0,0,0,0,0,0,0,0,0, #poor communication and outreach
                0.5, #model abuse
                1, #Discontinuity
                1.5, #indirect socioeconomic consequences
                1.8, #target species is a prey specialist
                2, #resource availability
                2, #climate change adding uncertainty
                2, #data transparency
                2, #need for multi-species management
                2, #distinct habitat preference
                2, #fine scale management
                1.5, #management scale system needs
                2, #management scale aligns
                0.8, #feasibility
                0,0,0,0,0,0,0,0,0,0,0,0,0,0), 
    nudge_x = c(-0.01,-0.01,0,0,0,0,0,0,0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,   0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05), 
    hjust = c(0.5, 0.5, 0.5,0.5,0.5,0.5,0.5,0.5,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) +

  xlim(0.89, 3.6) +
  ylim(-1, 100)+
  labs(y = "Percent of all codes (%)", x = "") +
  theme_minimal()+
  theme(axis.text.y = element_text(size = 14), 
        axis.title.y = element_text(size = 16), 
        legend.position = "none", 
        axis.text.x = element_blank(), 
        panel.grid.major = element_blank())+
  scale_fill_manual(values = c("#F48136", "#F46036", "#F44336", "#CFE2F3", "#C5E0B4", "#45818E"))+
  scale_color_manual(values = c("#F48136", "#F46036", "#F44336", "#CFE2F3", "#C5E0B4", "#45818E"))

ggsave(here("figures/sankey_tp.svg"), height = 10, width = 10, units = c("in"))

```

## Visualizing the literature bridges and barrier codes

Below is a first attempt at how to visualize some of the data collected from this review. This first section represents general information about the articles selected for this review (e.g., study location, fisheries or shipping channels involved, species for which the tool or management program was established for). Most of these plots may instead go in the supplemental materials or aid with interpretation.

### Study information

#### Article categories
```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 4

codes_vars$lit_type <- factor(codes_vars$lit_type , levels = c("NOAA Rule", "NMFS Notice", "Book chapter", "Thesis", "Methods", "Perspective", "Review", "Study"))

ggplot(codes_vars, aes(x = "", fill = lit_type))+
  geom_bar(position = "fill")+
  xlab("")+
  theme_minimal()+
  labs(fill = "Literature category")+
  ylab("Percentage of articles")+
  coord_flip()+
  scale_y_continuous(labels = scales::percent)+
  scale_fill_manual(values = MetBrewer::met.brewer("Veronese", n = 8))+
  theme(panel.background = element_rect(fill='transparent'),
         plot.background = element_rect(fill='transparent', color=NA),
         panel.grid.major = element_blank(),
         panel.grid.minor = element_blank(),
         legend.background = element_rect(fill='transparent'),
         legend.box.background = element_rect(fill='transparent'))
#ggsave(here("figures/lit_cat.svg"), width = 8, height = 4, units = c("in"))

```


::: panel-tabset
#### Study regions

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7

codes_vars$broad_location <- as.factor(codes_vars$broad_location)
codes_LU <- codes_vars[!duplicated(codes_vars$Lit_unit), ]
reg_s <- codes_LU %>%
  group_by(broad_location) %>%
  filter(broad_location != "NA" & broad_location != "Europe and United States") %>%
  summarise(count = n()) %>%
  ungroup() %>%
  mutate(perc = count/sum(count)*100) 


reg_bar <- ggplot(reg_s) +
  geom_bar(aes(x = perc, y = reorder(broad_location, perc)), fill = "dodgerblue4", width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     expand = c(0,0), 
                     limits = c(0, 48))+
  scale_y_discrete(expand = expansion(add = c(0.5,0.5))) + 
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)) + 
  geom_text(aes(x = perc, y = broad_location, label = broad_location),
    hjust = 0,
    nudge_x = 0.3,
    colour = "dodgerblue4",
    family = "Econ Sans Cnd",
    size = 3.5)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 13)
  )

reg_bar
```

#### Study fisheries and shipping channels

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-height: 10
#| fig-width: 10
fsh_shp <- codes_LU %>%
  gather(col, fsh_shp, fishery_or_channel1:fishery_or_channel4) %>%
  subset(select = fsh_shp)


fsh_shp_s <- fsh_shp %>%
  group_by(fsh_shp) %>%
  filter(fsh_shp != "NA") %>%
  summarise(count = n()) %>%
  ungroup() %>%
  mutate(perc = count/sum(count)*100) 


fsh_shp_bar <- ggplot(fsh_shp_s) +
  geom_bar(aes(x = perc, y = reorder(fsh_shp, perc)), fill = "dodgerblue4", width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     expand = c(0,0), 
                     limits = c(0, 14))+
  scale_y_discrete(expand = expansion(add = c(0.5,0.5))) + 
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 15)) + 
  geom_text(aes(x = perc, y = fsh_shp, label = fsh_shp),
    hjust = 0,
    nudge_x = 0.3,
    colour = "dodgerblue4",
    family = "Econ Sans Cnd",
    size = 5)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 16)
  )

fsh_shp_bar
```

#### Study taxa

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7

species <- codes_LU %>%
  gather(col, taxa, focal_taxa1:focal_taxa3) %>%
  subset(select = taxa)

spp_s <- species %>%
  group_by(taxa) %>%
  filter(taxa != "NA" & taxa != "Marine mammals") %>%
  summarise(count = n()) %>%
  ungroup() %>%
  mutate(perc = count/sum(count)*100) 

taxa_bar <- ggplot(spp_s) +
  geom_bar(aes(x = perc, y = reorder(taxa, perc)), fill = "dodgerblue4", width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     expand = c(0,0), 
                     limits = c(0, 23))+
  scale_y_discrete(expand = expansion(add = c(0.5,0.5))) + 
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)) + 
  geom_text(aes(x = perc, y = taxa, label = taxa),
    hjust = 0,
    nudge_x = 0.3,
    colour = "dodgerblue4",
    family = "Econ Sans Cnd",
    size = 3.5)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 13)
  )

taxa_bar
```

#### Study species

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 12

species_Gs <- codes_LU %>%
  gather(col, sp_name, species1:species16) %>%
  subset(select = sp_name)

spp_Gs_s <- species_Gs %>%
  group_by(sp_name) %>%
  filter(sp_name != "NA") %>%
  summarise(count = n()) %>%
  ungroup() %>%
  mutate(perc = count/sum(count)*100) 

sp_bar <- ggplot(spp_Gs_s) +
  geom_bar(aes(x = perc, y = reorder(sp_name, perc)), fill = "dodgerblue4", width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     expand = c(0,0), 
                     limits = c(0, 23))+
  scale_y_discrete(expand = expansion(add = c(0.5,0.5))) + 
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)) + 
  geom_text(aes(x = perc, y = sp_name, label = sp_name),
    hjust = 0,
    nudge_x = 0.3,
    colour = "dodgerblue4",
    family = "Econ Sans Cnd",
    size = 3.5)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 13)
  )

sp_bar
```

#### Conservation problem being addressed

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7

consv <- codes_LU %>%
  gather(col, consv_topic, reason1:reason3) %>%
  subset(select = consv_topic)

consv_s <- consv %>%
  group_by(consv_topic) %>%
  filter(consv_topic != "NA") %>%
  summarise(count = n()) %>%
  ungroup() %>%
  mutate(perc = count/sum(count)*100) 

consv_bar <- ggplot(consv_s) +
  geom_bar(aes(x = perc, y = reorder(consv_topic, perc)), fill = "dodgerblue4", width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     expand = c(0,0), 
                     limits = c(0, 18))+
  scale_y_discrete(expand = expansion(add = c(0,0))) + 
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)) + 
  geom_text(aes(x = perc, y = consv_topic, label = consv_topic),
    hjust = 0,
    nudge_x = 0.3,
    colour = "dodgerblue4",
    family = "Econ Sans Cnd",
    size = 3.5)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 13)
  )

consv_bar
```
:::

### Code appearance frequencies across articles (n = 118)

The proportions reported in these figures represent the percent of papers that mentioned a subcode within these broader code categories at least once.

::: panel-tabset
#### Broader categories

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

codes_vars2 = codes_vars
colnames(codes_vars2) <- gsub(x = colnames(codes_vars2), pattern = "\\.", replacement = " ")

  #calculate frequency of bridges vs. barriers being mentioned in articles -- need to add biotic and abiotic indicators cols
code_freq_new <- codes_vars2 %>%
  mutate(br_pos = as.numeric(if_any(c(33:48, 59:60), ~. == 1)), 
         ba_pos = as.numeric(if_any(49:58, ~. == 1)),
         br_dat = as.numeric(if_any(c("Management scale aligns with system needs", "Target species data availability", "Access to advanced technology and techniques", "Data transparency", "Environmental data availability", "Resource use data availability"), ~. == 1)), 
         br_eco = as.numeric(if_any(c("Expected climate change induced range shifts", "Distinct habitat preferences", "Highly mobile target species", "Life history information available for target species", "Fine scale management appropriate for target species", "Biotic indicators of target species presence", "Abiotic indicators of target species presence"), ~. == 1)), 
         br_soc = as.numeric(if_any(c("Resource availability", "Pre existing conditions", "Adoption incentives", "Feasibility", "Co management and communication"), ~. == 1)), 
         ba_dat = as.numeric(if_any(c("Gaps and inaccuracy", "Management scales do not align with system needs", "Model abuse", "Climate change adding uncertainty to target species habitat use"), ~. == 1)), 
         ba_eco = as.numeric(if_any(c("Need for multispecies management"), ~. == 1)), 
         ba_soc = as.numeric(if_any(c("Cost", "Indirect socioeconomic consequences", "Discontinuity", "Poor communication and outreach", "Poor program implementation"), ~. == 1)))

brba_sum <- code_freq_new %>%
  summarise(n_br = sum(br_pos), freq_br = n_br/118,
            n_ba = sum(ba_pos), freq_ba = n_ba/118,
            n_br_e = sum(br_eco), freq_br_e = n_br_e/118,
            n_br_d = sum(br_dat), freq_br_d = n_br_d/118,
            n_br_s = sum(br_soc), freq_br_s = n_br_s/118,
            n_ba_e = sum(ba_eco), freq_ba_e = n_ba_e/118,
            n_ba_d = sum(ba_dat), freq_ba_d = n_ba_d/118,
            n_ba_s = sum(ba_soc), freq_ba_s = n_ba_s/118) %>%
  gather(br_ba, value, c(2,4,6, 8, 10, 12, 14, 16)) %>%
  subset(select = c(br_ba, value)) %>%
  mutate(percent_label = scales::percent(value, accuracy = 1), 
         percent = if_else(br_ba == "freq_ba" | br_ba == "freq_ba_e" | br_ba == "freq_ba_d" | br_ba == "freq_ba_s", value, -value),
         code_level = if_else(br_ba %in% c("freq_ba", "freq_br"), "Overall bridge or barrier", 
                              if_else(br_ba %in% c("freq_ba_e", "freq_br_e"), "Ecological bridge or barrier", 
                              if_else(br_ba %in% c("freq_ba_d", "freq_br_d"), "Data bridge or barrier",
                              if_else(br_ba %in% c("freq_ba_s", "freq_br_s"), "Social bridge or barrier", NA)))),
         code_brba = if_else(br_ba %in% c("freq_br", "freq_br_e", "freq_br_s", "freq_br_d"), "bridge", "barrier"),
         alpha_brba = if_else(br_ba %in% c("freq_br_e", "freq_br_s", "freq_br_d", "freq_ba_e", "freq_ba_s", "freq_ba_d"), "alpha", "no_alpha")) %>%
  group_by(code_level)

brba_sum$code_level <- factor(brba_sum$code_level, levels = c("Social bridge or barrier", "Ecological bridge or barrier", "Data bridge or barrier", "Overall bridge or barrier"))
brba_sum$code_brba <- factor(brba_sum$code_brba, levels = c("bridge", "barrier"))

ggplot(brba_sum, aes(x = code_level, 
             y = percent,
             fill = code_brba)) +
  geom_col(width = 0.7) +
  geom_text(aes(label = percent_label),
            position = position_stack(vjust = 0.65),
            color = "black", 
            size = 5) +
  ylim(-1,1)+
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"), labels = c("Bridge frequency", "Barrier frequency")) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.x =element_blank(),
        axis.text.y = element_text(size = 20, color = "black"),
        panel.grid = element_blank(),
        legend.position = c(-0.21, 0.99),
        legend.text = element_text(size = 16, color = "black"),
        strip.text.y.right = element_text(angle = 0, size = 16)) +
  geom_hline(yintercept = 0.0, linewidth = 1) + 
  labs(fill = "")+ 
  guides(fill = guide_legend(nrow = 1))
```

#### Data frequencies

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

  #calculate frequency of bridges vs. barriers being mentioned in articles -- need to add biotic and abiotic indicators cols
data_freq <- codes_vars2 %>%
  subset(select = c("Management scale aligns with system needs", "Target species data availability", "Access to advanced technology and techniques", "Data transparency", "Environmental data availability", "Resource use data availability", "Gaps and inaccuracy", "Management scales do not align with system needs", "Model abuse", "Climate change adding uncertainty to target species habitat use")) %>%
  gather(category, pres_abs, 1:10) %>%
  mutate(br_ba = ifelse(category == "Gaps and inaccuracy" | category == "Management scales do not align with system needs" | category == "Model abuse" | category == "Climate change adding uncertainty to target species habitat use", "Data barrier", "Data bridge")) %>%
  group_by(category, br_ba)  %>%
  summarise(n = sum(pres_abs), 
            freq = (n/118)) %>%
  mutate(percent_label = scales::percent(freq, accuracy = 2)) %>%
  group_by(category)

my_labs <- c("0", "25", "50", "75")
data_freq$br_ba <- factor(as.factor(data_freq$br_ba), levels = c("Data bridge", "Data barrier"))

data_bar <- ggplot(data_freq) +
  geom_bar(aes(x = freq, y = reorder(category, freq), fill = br_ba), width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     limits = c(0,0.9),
                     expand = c(0,0), 
                     breaks = c(0, 0.25, 0.5, 0.75),
                     labels = my_labs)+
  scale_y_discrete(expand = expansion(add = c(0,0))) +
  tidyquant::theme_tq() +
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
    axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
    legend.position = "none", 
    strip.text = element_text(size = 16)) + 
  geom_text(aes(x = freq, y = category, label = percent_label),
    hjust = 0,
    nudge_x = -0.0001,
    colour = "black",
    family = "Econ Sans Cnd",
    size = 6)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 20)
  ) + 
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
  facet_wrap(~br_ba, scales = "free", nrow = 2)
data_bar

```

#### Ecological frequencies

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

  #calculate frequency of bridges vs. barriers being mentioned in articles -- need to add biotic and abiotic indicators cols
ecol_freq <- codes_vars2 %>%
  subset(select = c("Expected climate change induced range shifts", "Distinct habitat preferences", "Highly mobile target species", "Life history information available for target species", "Fine scale management appropriate for target species", "Biotic indicators of target species presence", "Abiotic indicators of target species presence","Need for multispecies management")) %>%
  gather(category, pres_abs, 1:8) %>%
  mutate(br_ba = ifelse(category == "Need for multispecies management", "Ecological barrier", "Ecological bridge")) %>%
  group_by(category, br_ba)  %>%
  summarise(n = sum(pres_abs), 
            freq = (n/118)) %>%
  mutate(percent_label = scales::percent(freq, accuracy = 2)) %>%
  group_by(category)

ecol_freq$category <- replace(ecol_freq$category, ecol_freq$category == "Fine scale management appropriate for target species", "Fine-scale management appropriate for target species")
ecol_freq$br_ba <- factor(as.factor(ecol_freq$br_ba), levels = c("Ecological bridge", "Ecological barrier"))

ecol_bar <- ggplot(ecol_freq) +
  geom_bar(aes(x = freq, y = reorder(category, freq), fill = br_ba), width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     limits = c(0,0.9),
                     expand = c(0,0), 
                     breaks = c(0, 0.25, 0.5, 0.75),
                     labels = my_labs)+
  scale_y_discrete(expand = expansion(add = c(0,0))) +
  tidyquant::theme_tq() +
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
    axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
    legend.position = "none", 
    strip.text = element_text(size = 16)) + 
  geom_text(aes(x = freq, y = category, label = percent_label),
    hjust = 0,
    nudge_x = -0.0001,
    colour = "black",
    family = "Econ Sans Cnd",
    size = 6)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 20)
  ) + 
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
  facet_wrap(~br_ba, scales = "free", nrow = 2)

ecol_bar

```

#### Social frequencies

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

  #calculate frequency of bridges vs. barriers being mentioned in articles -- need to add biotic and abiotic indicators cols
soc_freq <- codes_vars2 %>%
  subset(select = c("Resource availability", "Pre existing conditions", "Adoption incentives", "Feasibility", "Co management and communication", "Indirect socioeconomic consequences", "Discontinuity", "Cost", "Poor communication and outreach", "Poor program implementation")) %>%
  gather(category, pres_abs, 1:9) %>%
  mutate(br_ba = ifelse(category == "Indirect socioeconomic consequences" | category == "Discontinuity" | category == "Poor communication and outreach" | category == "Poor program implementation" | category == "Cost", "Social barrier", "Social bridge")) %>%
  group_by(category, br_ba)  %>%
  summarise(n = sum(pres_abs), 
            freq = (n/118)) %>%
  mutate(percent_label = scales::percent(freq, accuracy = 2)) %>%
  group_by(category)

soc_freq$category <- replace(soc_freq$category, soc_freq$category == "Co management and communication", "Co-management and communication")
soc_freq$category <- replace(soc_freq$category, soc_freq$category == "Pre existing conditions", "Pre-existing conditions")
soc_freq$br_ba <- factor(as.factor(soc_freq$br_ba), levels = c("Social bridge", "Social barrier"))


soc_bar <- ggplot(soc_freq) +
  geom_bar(aes(x = freq, y = reorder(category, freq), fill = br_ba), width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     limits = c(0,0.9),
                     expand = c(0,0), 
                     breaks = c(0, 0.25, 0.5, 0.75),
                     labels = my_labs)+
  scale_y_discrete(expand = expansion(add = c(0,0))) +
  tidyquant::theme_tq() +
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
    axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
    legend.position = "none", 
    strip.text = element_text(size = 16)) + 
  geom_text(aes(x = freq, y = category, label = percent_label),
    hjust = 0,
    nudge_x = -0.0001,
    colour = "black",
    family = "Econ Sans Cnd",
    size = 6)+
  labs(subtitle = "Percent of sum from all articles (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 20)
  ) + 
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
  facet_wrap(~br_ba, scales = "free", nrow = 2)
soc_bar

```
:::

### Code appearance frequencies within code categories

Here, I have plotted the same information as the previous section, but as a percentage of the overall bridges and barriers groupings. For example, data bridges make up 37% of all bridge codes. The same pattern holds for the other sub-panels. For example, on the ecological page, abiotic indicators account for 22% of all ecological bridge codes.

::: panel-tabset
#### Broader categories

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

code_sum <- code_freq %>%
  group_by(bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(code_cat) %>% 
  mutate(n_subtotal = sum(total)) %>%
  summarise(value = n_subtotal/n_total) %>%
  rename("br_ba" = code_cat) %>%
  mutate(percent_label = scales::percent(value, accuracy = 1), 
         percent = if_else(br_ba == "Data barrier" | br_ba == "Ecological barrier" | br_ba == "Social barrier", value, -value),
         code_level = if_else(br_ba %in% c("Ecological barrier", "Ecological bridge"), "Ecological bridge or barrier", 
                              if_else(br_ba %in% c("Data barrier", "Data bridge"), "Data bridge or barrier",
                              if_else(br_ba %in% c("Social barrier", "Social bridge"), "Social bridge or barrier", NA))), 
         code_brba = if_else(br_ba %in% c("Data bridge", "Ecological bridge", "Social bridge"), "bridge", "barrier")) %>%
  group_by(code_level) %>%
  distinct()

code_sum$code_level <- factor(code_sum$code_level, levels = c("Social bridge or barrier", "Ecological bridge or barrier", "Data bridge or barrier"))
code_sum$code_brba <- factor(code_sum$code_brba, levels = c("bridge", "barrier"))

ggplot(code_sum, aes(x = code_level, 
             y = percent,
             fill = code_brba)) +
  geom_col(width = 0.7) +
  geom_text(aes(label = percent_label),
            position = position_stack(vjust = 0.65),
            color = "black", 
            size = 5) +
  ylim(-0.4,0.7)+
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"), labels = c("Bridge frequency", "Barrier frequency")) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.x =element_blank(),
        axis.text.y = element_text(size = 20, color = "black"),
        panel.grid = element_blank(),
        legend.position = c(-0.17, 0.99),
        legend.text = element_text(size = 16, color = "black"),
        strip.text.y.right = element_text(angle = 0, size = 16)) +
  geom_hline(yintercept = 0.0, linewidth = 1) + 
  labs(fill = "")+ 
  guides(fill = guide_legend(nrow = 1))

```

#### Data codes

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

data_freq <- code_freq %>%
  filter(code_cat == "Data bridge" | code_cat == "Data barrier")

data_sum <- data_freq %>%
  group_by(bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(code_name) %>% 
  summarise(value = total/n_total) %>%
  mutate(code_cat = ifelse(code_name == "Gaps and inaccuracy" | code_name == "Management scales do not align with system needs" | code_name == "Model abuse" | code_name == "Climate change adding uncertainty to target species habitat use", "Data barrier", "Data bridge")) %>%
  mutate(percent_label = scales::percent(value, accuracy = 2))
  
my_labs <- c("0", "25", "50", "75")
data_sum$code_cat <- factor(as.factor(data_sum$code_cat), levels = c("Data bridge", "Data barrier"))

ggplot(data_sum) +
  geom_bar(aes(x = value, y = reorder(code_name, value), fill = code_cat), width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     limits = c(0,0.9),
                     expand = c(0,0), 
                     breaks = c(0, 0.25, 0.5, 0.75),
                     labels = my_labs)+
  scale_y_discrete(expand = expansion(add = c(0,0))) +
  tidyquant::theme_tq() +
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
    axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
    legend.position = "none", 
    strip.text = element_text(size = 16)) + 
  geom_text(aes(x = value, y = code_name, label = percent_label),
    hjust = 0,
    nudge_x = -0.0001,
    colour = "black",
    family = "Econ Sans Cnd",
    size = 6)+
  labs(subtitle = "Percent from all data bridges or barriers (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 20)
  ) + 
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
  facet_wrap(~code_cat, scales = "free", nrow = 2)

```

#### Ecological codes

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

eco_freq <- code_freq %>%
  filter(code_cat == "Ecological bridge" | code_cat == "Ecological barrier")

eco_sum <- eco_freq %>%
  group_by(bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(code_name) %>% 
  summarise(value = total/n_total) %>%
  mutate(code_cat = ifelse(code_name == "Need for multispecies management", "Ecological barrier", "Ecological bridge")) %>%
  mutate(percent_label = scales::percent(value, accuracy = 2))
  
eco_sum$code_cat <- factor(as.factor(eco_sum$code_cat), levels = c("Ecological bridge", "Ecological barrier"))
my_labs2 <- c("0", "30", "50", "75", "100")

ggplot(eco_sum) +
  geom_bar(aes(x = value, y = reorder(code_name, value), fill = code_cat), width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     limits = c(0,1.1),
                     expand = c(0,0), 
                     breaks = c(0, 0.3, 0.5, 0.75, 1),
                     labels = my_labs2)+
  scale_y_discrete(expand = expansion(add = c(0,0))) +
  tidyquant::theme_tq() +
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
    axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
    legend.position = "none", 
    strip.text = element_text(size = 16)) + 
  geom_text(aes(x = value, y = code_name, label = percent_label),
    hjust = 0,
    nudge_x = -0.0001,
    colour = "black",
    family = "Econ Sans Cnd",
    size = 6)+
  labs(subtitle = "Percent from all ecological bridges or barriers (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 20)
  ) + 
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
  facet_wrap(~code_cat, scales = "free", nrow = 2)

```

#### Social codes

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

soc_freq <- code_freq %>%
  filter(code_cat == "Social bridge" | code_cat == "Social barrier")

soc_sum <- soc_freq %>%
  group_by(bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(code_name) %>% 
  summarise(value = total/n_total) %>%
  mutate(code_cat = ifelse(code_name == "Cost" | code_name == "Indirect socioeconomic consequences" | code_name == "Discontinuity" | code_name == "Poor communication and outreach" | code_name == "Poor program implementation", "Social barrier", "Social bridge")) %>%
  mutate(percent_label = scales::percent(value, accuracy = 2))
  
soc_sum$code_cat <- factor(as.factor(soc_sum$code_cat), levels = c("Social bridge", "Social barrier"))
my_labs2 <- c("0", "30")

ggplot(soc_sum) +
  geom_bar(aes(x = value, y = reorder(code_name, value), fill = code_cat), width = 0.6, stat = "identity")+
  scale_x_continuous(position = "top", 
                     limits = c(0,1),
                     expand = c(0,0), 
                     breaks = c(0,0.25, 0.5, 0.75),
                     labels = my_labs)+
  scale_y_discrete(expand = expansion(add = c(0,0))) +
  tidyquant::theme_tq() +
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
    axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
    legend.position = "none", 
    strip.text = element_text(size = 16)) + 
  geom_text(aes(x = value, y = code_name, label = percent_label),
    hjust = 0,
    nudge_x = -0.0001,
    colour = "black",
    family = "Econ Sans Cnd",
    size = 6)+
  labs(subtitle = "Percent from all social bridges or barriers (%)") + 
  theme(plot.subtitle = element_text(
      family = "Econ Sans Cnd",
      size = 20)
  ) + 
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
  facet_wrap(~code_cat, scales = "free", nrow = 2)

```
:::

### Code co-occurrence themes

Could consider including code co-occurrence themes as a heat map, or could list the most frequent pairings as a table.

::: panel-tabset
#### All code relations

This is a heatmap of all code relationships within articles. The number of co-ocurrences represents the number of times two codes co-occurered together in the same article.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 15
#| fig-height: 12
#| fig-align: center

code_rel_melt <- reshape::melt(code_rel)
code_rel_melt$variable <- gsub(".", " ", code_rel_melt$variable, fixed = TRUE)

code_rel_melt <- code_rel_melt %>%
  separate(Code.System, c("key", "code1"), "> ", convert = TRUE) 

code_rel_melt$key <- str_trim(code_rel_melt$key)

colnames(code_rel_melt) <- c("brba_code1", "code1", "code2", "total")

ggplot(code_rel_melt, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total)) + 
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14))+
geom_text(aes(label = total))
```

#### Most frequent code relations

This heatmap represents the same data set as the last figure, but only includes co-occurrence values greater than or equal to 6, which is the 75% quantile of the co-occurrence totals. I have also added boxes around totals greater than 11, which was the 90% quantile of the co-occurrence total data set. Blue text represents data bridges and barriers, grey text represents ecological bridges and barriers, and orange text represents social bridges and barriers.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

#add brba column to second code col
code_rel_melt2 <- code_rel_melt
code_rel_melt2$brba_code2 <- NA

code_rel_melt2$code2[code_rel_melt2$code2 == "Fine scale management appropriate for target species"] <- "Fine-scale management appropriate for target species"
code_rel_melt2$code2[code_rel_melt2$code2 == "Pre existing conditions"] <- "Pre-existing conditions"
code_rel_melt2$code2[code_rel_melt2$code2 == "Co management and communication"] <- "Co-management and communication"

for(i in 1:nrow(code_rel_melt2)){
  code_temp = code_rel_melt2$code2[i]

  brba_temp = code_rel_melt2 %>% filter(code1 == code_temp & code2 == code_temp)
  brba_code_temp = brba_temp$brba_code1[1]

  code_rel_melt2$brba_code2[i] <- brba_code_temp
}

code_rel_melt2$brba_code2[code_rel_melt2$code2 == "Target species is a prey specialist"] <- "Ecological bridge"

group_colors = c("Data Bridge" = "dodgerblue4", "Data Barrier" = "dodgerblue4", "Ecological Bridge" = "honeydew4", "Ecological Barrier" = "honeydew4", "Social Bridge" = "darkorange4", "Social Barrier" = "darkorange4")

code_rel_melt_h <- code_rel_melt2 %>%
  filter(total >= 6) %>%
  mutate(bor_box = ifelse(total >= 11, "TRUE", "FALSE"), 
        bor_box = as.factor(bor_box), 
        code1 = as.factor(code1), 
        code2 = as.factor(code2))

code_rel_melt_h$bor_box <- factor(code_rel_melt_h$bor_box, levels = c("TRUE", "FALSE"))

code_rel_melt_h <- code_rel_melt_h %>%
  mutate(code1 = reorder(code1, -total, FUN = mean),
         code2 = reorder(code2, total, FUN = mean))

unique_x_groups <- code_rel_melt_h %>%
distinct(code1, brba_code1) %>%
arrange(code1)

unique_y_groups <- code_rel_melt_h %>%
distinct(code2, brba_code2) %>%
arrange(code2)

x_colors <- setNames(group_colors[unique_x_groups$brba_code1], unique_x_groups$code1)
y_colors <- setNames(group_colors[unique_y_groups$brba_code2], unique_y_groups$code2)

ggplot(code_rel_melt_h, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) + 
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold", color = x_colors[levels(code_rel_melt_h$code1)]), 
      axis.text.y = element_text(size = 14, face = "bold", color = y_colors[levels(code_rel_melt_h$code2)]), 
      panel.background = element_blank())+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")

```

#### Data code relations

This is a look at the data bridge and barrier code relations. Totals higher than or equal to 14 (90th quantile for data totals) are outlined in black.Here, red text represents codes that are barriers, and green text represents codes that are bridges.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

code_rel_d <- read.csv(here("data/code_rel_d.csv"))

code_rel_melt_d <- reshape::melt(code_rel_d)
code_rel_melt_d$variable <- gsub(".", " ", code_rel_melt_d$variable, fixed = TRUE)

code_rel_melt_d <- code_rel_melt_d %>%
  separate(Code.System, c("key", "code1"), "> ", convert = TRUE) 

code_rel_melt_d$key <- str_trim(code_rel_melt_d$key)

colnames(code_rel_melt_d) <- c("brba_code1", "code1", "code2", "total")

code_rel_melt2_d <- code_rel_melt_d
code_rel_melt2_d$brba_code2 <- NA
code_rel_melt2_d$brba_key1 <- NA
code_rel_melt2_d$brba_key2 <- NA

for(i in 1:nrow(code_rel_melt2_d)){
  code_temp = code_rel_melt2_d$code2[i]

  brba_temp = code_rel_melt2_d %>% filter(code1 == code_temp & code2 == code_temp)
  brba_code_temp = brba_temp$brba_code1[1]

  code_rel_melt2_d$brba_code2[i] <- brba_code_temp

  if(grepl("Bridge", code_rel_melt2_d$brba_code1[i])){
      code_rel_melt2_d$brba_key1[i] = "Bridge"
  } else if(grepl("Barrier", code_rel_melt2_d$brba_code1[i])){
      code_rel_melt2_d$brba_key1[i] = "Barrier"
  }

  if(grepl("Bridge", code_rel_melt2_d$brba_code2[i])){
      code_rel_melt2_d$brba_key2[i] = "Bridge"
  } else if(grepl("Barrier", code_rel_melt2_d$brba_code2[i])){
      code_rel_melt2_d$brba_key2[i] = "Barrier"
  }
}

code_rel_melt2_d <- code_rel_melt2_d %>%
  mutate(bor_box = ifelse(total >= 14, "TRUE", "FALSE"), 
        bor_box = as.factor(bor_box), 
        code1 = as.factor(code1), 
        code2 = as.factor(code2))

code_rel_melt2_d$bor_box <- factor(code_rel_melt2_d$bor_box, levels = c("TRUE", "FALSE"))

code_rel_melt2_d <- code_rel_melt2_d %>%
  mutate(code1 = reorder(code1, -total, FUN = mean),
         code2 = reorder(code2, total, FUN = mean))

brba_colors <- c("Bridge" = "darkolivegreen", "Barrier" = "red4")

unique_x_groups <- code_rel_melt2_d %>%
distinct(code1, brba_key1) %>%
arrange(code1)

unique_y_groups <- code_rel_melt2_d %>%
distinct(code2, brba_key2) %>%
arrange(code2)

x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)

ggplot(code_rel_melt2_d, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) + 
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold", color = x_colors[levels(code_rel_melt2_d$code1)]), 
      axis.text.y = element_text(size = 14, face = "bold", color = y_colors[levels(code_rel_melt2_d$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")

```

#### Ecological code relations

This is a look at the ecological bridge and barrier code relations. Totals higher than or equal to 5 (90th quantile for ecological totals) are outlined in black.Here, red text represents codes that are barriers, and green text represents codes that are bridges.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

code_rel_e <- read.csv(here("data/code_rel_e.csv"))

code_rel_melt_e <- reshape::melt(code_rel_e)
code_rel_melt_e$variable <- gsub(".", " ", code_rel_melt_e$variable, fixed = TRUE)

code_rel_melt_e <- code_rel_melt_e %>%
  separate(Code.System, c("key", "code1"), "> ", convert = TRUE) 

code_rel_melt_e$key <- str_trim(code_rel_melt_e$key)

colnames(code_rel_melt_e) <- c("brba_code1", "code1", "code2", "total")

code_rel_melt2_e <- code_rel_melt_e
code_rel_melt2_e$brba_code2 <- NA
code_rel_melt2_e$brba_key1 <- NA
code_rel_melt2_e$brba_key2 <- NA

code_rel_melt2_e$code2[code_rel_melt2_e$code2 == "Fine scale management appropriate for target species"] <- "Fine-scale management appropriate for target species"
code_rel_melt2_e$brba_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Ecological bridge"

for(i in 1:nrow(code_rel_melt2_e)){
  code_temp = code_rel_melt2_e$code2[i]

  brba_temp = code_rel_melt2_e %>% filter(code1 == code_temp & code2 == code_temp)
  brba_code_temp = brba_temp$brba_code1[1]

  code_rel_melt2_e$brba_code2[i] <- brba_code_temp

  if(grepl("Bridge", code_rel_melt2_e$brba_code1[i])){
      code_rel_melt2_e$brba_key1[i] = "Bridge"
  } else if(grepl("Barrier", code_rel_melt2_e$brba_code1[i])){
      code_rel_melt2_e$brba_key1[i] = "Barrier"
  }

  if(grepl("Bridge", code_rel_melt2_e$brba_code2[i])){
      code_rel_melt2_e$brba_key2[i] = "Bridge"
  } else if(grepl("Barrier", code_rel_melt2_e$brba_code2[i])){
      code_rel_melt2_e$brba_key2[i] = "Barrier"
  }
}
code_rel_melt2_e$brba_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Ecological bridge"
code_rel_melt2_e$brba_key2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Bridge"

code_rel_melt2_e <- code_rel_melt2_e %>%
  mutate(bor_box = ifelse(total >= 5, "TRUE", "FALSE"), 
        bor_box = as.factor(bor_box), 
        code1 = as.factor(code1), 
        code2 = as.factor(code2))

code_rel_melt2_e$bor_box <- factor(code_rel_melt2_e$bor_box, levels = c("TRUE", "FALSE"))

code_rel_melt2_e <- code_rel_melt2_e %>%
  mutate(code1 = reorder(code1, -total, FUN = mean),
         code2 = reorder(code2, total, FUN = mean))

unique_x_groups <- code_rel_melt2_e %>%
distinct(code1, brba_key1) %>%
arrange(code1)

unique_y_groups <- code_rel_melt2_e %>%
distinct(code2, brba_key2) %>%
arrange(code2)

x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)

ggplot(code_rel_melt2_e, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) + 
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold", color = x_colors[levels(code_rel_melt2_e$code1)]), 
      axis.text.y = element_text(size = 14, face = "bold", color = y_colors[levels(code_rel_melt2_e$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")

```

#### Social code relations

This is a look at the social bridge and barrier code relations. Totals higher than or equal to 5 (90th quantile for social totals) are outlined in black.Here, red text represents codes that are barriers, and green text represents codes that are bridges.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

code_rel_s <- read.csv(here("data/code_rel_s.csv"))

code_rel_melt_s <- reshape::melt(code_rel_s)
code_rel_melt_s$variable <- gsub(".", " ", code_rel_melt_s$variable, fixed = TRUE)

code_rel_melt_s <- code_rel_melt_s %>%
  separate(Code.System, c("key", "code1"), "> ", convert = TRUE) 

code_rel_melt_s$key <- str_trim(code_rel_melt_s$key)

colnames(code_rel_melt_s) <- c("brba_code1", "code1", "code2", "total")

code_rel_melt2_s <- code_rel_melt_s
code_rel_melt2_s$brba_code2 <- NA
code_rel_melt2_s$brba_key1 <- NA
code_rel_melt2_s$brba_key2 <- NA

code_rel_melt2_s$code2[code_rel_melt2_s$code2 == "Pre existing conditions"] <- "Pre-existing conditions"
code_rel_melt2_s$code2[code_rel_melt2_s$code2 == "Co management and communication"] <- "Co-management and communication"

for(i in 1:nrow(code_rel_melt2_s)){
  code_temp = code_rel_melt2_s$code2[i]

  brba_temp = code_rel_melt2_s %>% filter(code1 == code_temp & code2 == code_temp)
  brba_code_temp = brba_temp$brba_code1[1]

  code_rel_melt2_s$brba_code2[i] <- brba_code_temp

  if(grepl("Bridge", code_rel_melt2_s$brba_code1[i])){
      code_rel_melt2_s$brba_key1[i] = "Bridge"
  } else if(grepl("Barrier", code_rel_melt2_s$brba_code1[i])){
      code_rel_melt2_s$brba_key1[i] = "Barrier"
  }

  if(grepl("Bridge", code_rel_melt2_s$brba_code2[i])){
      code_rel_melt2_s$brba_key2[i] = "Bridge"
  } else if(grepl("Barrier", code_rel_melt2_s$brba_code2[i])){
      code_rel_melt2_s$brba_key2[i] = "Barrier"
  }
}

code_rel_melt2_s <- code_rel_melt2_s %>%
  mutate(bor_box = ifelse(total >= 5, "TRUE", "FALSE"), 
        bor_box = as.factor(bor_box), 
        code1 = as.factor(code1), 
        code2 = as.factor(code2))

code_rel_melt2_s$bor_box <- factor(code_rel_melt2_s$bor_box, levels = c("TRUE", "FALSE"))

code_rel_melt2_s <- code_rel_melt2_s %>%
  mutate(code1 = reorder(code1, -total, FUN = mean),
         code2 = reorder(code2, total, FUN = mean))

unique_x_groups <- code_rel_melt2_s %>%
distinct(code1, brba_key1) %>%
arrange(code1)

unique_y_groups <- code_rel_melt2_s %>%
distinct(code2, brba_key2) %>%
arrange(code2)

x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)

ggplot(code_rel_melt2_s, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) + 
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold", color = x_colors[levels(code_rel_melt2_s$code1)]), 
      axis.text.y = element_text(size = 14, face = "bold", color = y_colors[levels(code_rel_melt2_s$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")

```
:::

# Surveys

## Survey respondants
```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 4
#| fig-align: center

code_vars_s <- code_vars_s %>% mutate(survey = as.factor(survey))
code_vars_s$survey <- factor(code_vars_s$survey , levels = c("Shad surveys","WhaleWatch TMMC surveys","WhaleWatch surveys", "Yellowtail surveys"))

ggplot(code_vars_s, aes(x = "", fill = survey))+
  geom_bar(position = "fill")+
  xlab("")+
  theme_minimal()+
  labs(fill = "Respondant position")+
  ylab("Percentage of survey respondants")+
  coord_flip()+
  scale_y_continuous(labels = scales::percent)+
  scale_fill_manual(values = MetBrewer::met.brewer("Veronese", n = 4), labels = c("River Herring Avoidance Program", "Whale Safe Southern California", "Whale Safe Northern California", "Yellowtail Flounder Avoidance Program"))

```



## Respondant positions

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 4
#| fig-align: center

code_vars_pos <- code_vars_s %>%
  pivot_longer(
    cols = "pos1":"pos5", 
    names_to = "pos_number",
    values_to = "pos_type"
  )

code_vars_pos <- code_vars_pos %>% mutate(pos_type = as.factor(pos_type))
code_vars_pos$pos_type <- factor(code_vars_pos$pos_type , levels = c("Vessel operator", "Crew", "Vessel captain", "Fleet manager", "Fishery manager", "Commercial fisherman", "Fishery advisory board member", "Vessel owner", "Fishery scientist", "NA"))

ggplot(code_vars_pos, aes(x = "", fill = pos_type))+
  geom_bar(position = "fill")+
  xlab("")+
  theme_minimal()+
  labs(fill = "Respondant position")+
  ylab("Percentage of respondants")+
  coord_flip()+
  scale_y_continuous(labels = scales::percent)+
  scale_fill_manual(values = MetBrewer::met.brewer("Veronese", n = 10))

```


## Respondant experience

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 5
#| fig-align: center

ggplot(code_vars_s, aes(x = "", pos_num))+
  geom_violin(size = 1.5, color = "steelblue4")+
  geom_jitter(height = 0, width = 0.1, size = 3, color = "steelblue4", alpha = 0.5)+
  theme_minimal() + 
  xlab("")+
  ylab("Number of years in position")+
  theme(axis.title = element_text(size = 16), 
        axis.text = element_text(size = 14, color = "black"))

```


## Code appearance frequencies across surveys (n = 21)

The proportions reported in these figures represent the percent of surveys that mentioned a subcode within these broader code categories at least once.

::: panel-tabset
#### Broader categories

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

codes_vars_s2 = code_vars_s
colnames(codes_vars_s2) <- gsub(x = colnames(codes_vars_s2), pattern = "\\.", replacement = " ")

  #calculate frequency of bridges vs. barriers being mentioned in surveys
code_freq_new_s <- codes_vars_s2 %>%
  mutate(br_pos = as.numeric(if_any(38:61, ~. == 1)), 
         ba_pos = as.numeric(if_any(21:37, ~. == 1)),
         br_reg = as.numeric(if_any(c(38:45), ~. ==1)),
         br_soc = as.numeric(if_any(c(46:55), ~. == 1)), 
         br_dat = as.numeric(if_any(c(56:57), ~. == 1)), 
         br_eco = as.numeric(if_any(c(58:61), ~. == 1)), 
         ba_reg = as.numeric(if_any(c(21:23), ~. == 1)),
         ba_dat = as.numeric(if_any(c(24:26), ~. == 1)), 
         ba_eco = as.numeric(if_any(c(27), ~. == 1)), 
         ba_soc = as.numeric(if_any(c(28:37), ~. == 1)))

brba_sum_s <- code_freq_new_s %>%
  summarise(n_br = sum(br_pos), freq_br = n_br/21,
            n_ba = sum(ba_pos), freq_ba = n_ba/21,
            n_br_e = sum(br_eco), freq_br_e = n_br_e/21,
            n_br_d = sum(br_dat), freq_br_d = n_br_d/21,
            n_br_s = sum(br_soc), freq_br_s = n_br_s/21,
            n_br_r = sum(br_reg), freq_br_r = n_br_r/21,
            n_ba_e = sum(ba_eco), freq_ba_e = n_ba_e/21,
            n_ba_d = sum(ba_dat), freq_ba_d = n_ba_d/21,
            n_ba_s = sum(ba_soc), freq_ba_s = n_ba_s/21, 
            n_ba_r = sum(ba_reg), freq_ba_r = n_ba_r/21) %>%  
  gather(br_ba, value, c(2,4,6, 8, 10, 12, 14, 16, 18, 20)) %>%
  subset(select = c(br_ba, value)) %>%
  mutate(percent_label = scales::percent(value, accuracy = 1), 
         percent = if_else(br_ba == "freq_ba" | br_ba == "freq_ba_e" | br_ba == "freq_ba_d" | br_ba == "freq_ba_s" | br_ba == "freq_ba_r", value, -value),
         code_level = if_else(br_ba %in% c("freq_ba", "freq_br"), "Overall bridge or barrier", 
                              if_else(br_ba %in% c("freq_ba_e", "freq_br_e"), "Ecological bridge or barrier", 
                              if_else(br_ba %in% c("freq_ba_d", "freq_br_d"), "Data bridge or barrier",
                              if_else(br_ba %in% c("freq_ba_r", "freq_br_r"), "Regulatory bridge or barrier",
                              if_else(br_ba %in% c("freq_ba_s", "freq_br_s"), "Social bridge or barrier", NA))))),
         code_brba = if_else(br_ba %in% c("freq_br", "freq_br_e", "freq_br_s", "freq_br_d", "freq_br_r"), "bridge", "barrier"),
         alpha_brba = if_else(br_ba %in% c("freq_br_e", "freq_br_s", "freq_br_d", "freq_br_r", "freq_ba_e", "freq_ba_s", "freq_ba_d", "freq_ba_r"), "alpha", "no_alpha")) %>%
  group_by(code_level)

brba_sum_s$code_level <- factor(brba_sum_s$code_level, levels = c("Ecological bridge or barrier", "Data bridge or barrier", "Regulatory bridge or barrier","Social bridge or barrier", "Overall bridge or barrier"))
brba_sum_s$code_brba <- factor(brba_sum_s$code_brba, levels = c("bridge", "barrier"))

ggplot(brba_sum_s, aes(x = code_level, 
             y = percent,
             fill = code_brba)) +
  geom_col(width = 0.7) +
  geom_text(aes(label = percent_label),
            position = position_stack(vjust = 0.65),
            color = "black", 
            size = 5) +
  ylim(-1,1)+
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"), labels = c("Bridge frequency", "Barrier frequency")) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.x =element_blank(),
        axis.text.y = element_text(size = 20, color = "black"),
        panel.grid = element_blank(),
        legend.position = c(-0.21, 0.99),
        legend.text = element_text(size = 16, color = "black"),
        strip.text.y.right = element_text(angle = 0, size = 16)) +
  geom_hline(yintercept = 0.0, linewidth = 1) + 
  labs(fill = "")+ 
  guides(fill = guide_legend(nrow = 1))
```

#### Data frequencies

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

  #calculate frequency of bridges vs. barriers being mentioned in articles -- need to add biotic and abiotic indicators cols
# data_freq_s <- codes_vars_s2 %>%
#   subset(select = c("Management scale aligns with system needs", "Target species data availability", "Access to advanced technology and techniques", "Data transparency", "Environmental data availability", "Resource use data availability", "Gaps and inaccuracy", "Management scales do not align with system needs", "Model abuse", "Climate change adding uncertainty to target species habitat use")) %>%
#   gather(category, pres_abs, 1:10) %>%
#   mutate(br_ba = ifelse(category == "Gaps and inaccuracy" | category == "Management scales do not align with system needs" | category == "Model abuse" | category == "Climate change adding uncertainty to target species habitat use", "Data barrier", "Data bridge")) %>%
#   group_by(category, br_ba)  %>%
#   summarise(n = sum(pres_abs), 
#             freq = (n/118)) %>%
#   mutate(percent_label = scales::percent(freq, accuracy = 2)) %>%
#   group_by(category)
# 
# my_labs <- c("0", "25", "50", "75")
# data_freq$br_ba <- factor(as.factor(data_freq$br_ba), levels = c("Data bridge", "Data barrier"))
# 
# data_bar <- ggplot(data_freq) +
#   geom_bar(aes(x = freq, y = reorder(category, freq), fill = br_ba), width = 0.6, stat = "identity")+
#   scale_x_continuous(position = "top", 
#                      limits = c(0,0.9),
#                      expand = c(0,0), 
#                      breaks = c(0, 0.25, 0.5, 0.75),
#                      labels = my_labs)+
#   scale_y_discrete(expand = expansion(add = c(0,0))) +
#   tidyquant::theme_tq() +
#   theme(
#     # Set background color to white
#     panel.background = element_rect(fill = "white"),
#     # Set the color and the width of the grid lines for the horizontal axis
#     panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
#     # Remove tick marks by setting their length to 0
#     axis.ticks.length = unit(0, "mm"),
#     # Remove the title for both axes
#     axis.title = element_blank(),
#     # Only left line of the vertical axis is painted in black
#     axis.line.y.left = element_line(color = "black"),
#     # But customize labels for the horizontal axis
#     axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
#     axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
#     legend.position = "none", 
#     strip.text = element_text(size = 16)) + 
#   geom_text(aes(x = freq, y = category, label = percent_label),
#     hjust = 0,
#     nudge_x = -0.0001,
#     colour = "black",
#     family = "Econ Sans Cnd",
#     size = 6)+
#   labs(subtitle = "Percent of sum from all articles (%)") + 
#   theme(plot.subtitle = element_text(
#       family = "Econ Sans Cnd",
#       size = 20)
#   ) + 
#   scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
#   facet_wrap(~br_ba, scales = "free", nrow = 2)
# data_bar

```

#### Ecological frequencies

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

  #calculate frequency of bridges vs. barriers being mentioned in articles -- need to add biotic and abiotic indicators cols
# ecol_freq <- codes_vars2 %>%
#   subset(select = c("Expected climate change induced range shifts", "Distinct habitat preferences", "Highly mobile target species", "Life history information available for target species", "Fine scale management appropriate for target species", "Biotic indicators of target species presence", "Abiotic indicators of target species presence","Need for multispecies management")) %>%
#   gather(category, pres_abs, 1:8) %>%
#   mutate(br_ba = ifelse(category == "Need for multispecies management", "Ecological barrier", "Ecological bridge")) %>%
#   group_by(category, br_ba)  %>%
#   summarise(n = sum(pres_abs), 
#             freq = (n/118)) %>%
#   mutate(percent_label = scales::percent(freq, accuracy = 2)) %>%
#   group_by(category)
# 
# ecol_freq$category <- replace(ecol_freq$category, ecol_freq$category == "Fine scale management appropriate for target species", "Fine-scale management appropriate for target species")
# ecol_freq$br_ba <- factor(as.factor(ecol_freq$br_ba), levels = c("Ecological bridge", "Ecological barrier"))
# 
# ecol_bar <- ggplot(ecol_freq) +
#   geom_bar(aes(x = freq, y = reorder(category, freq), fill = br_ba), width = 0.6, stat = "identity")+
#   scale_x_continuous(position = "top", 
#                      limits = c(0,0.9),
#                      expand = c(0,0), 
#                      breaks = c(0, 0.25, 0.5, 0.75),
#                      labels = my_labs)+
#   scale_y_discrete(expand = expansion(add = c(0,0))) +
#   tidyquant::theme_tq() +
#   theme(
#     # Set background color to white
#     panel.background = element_rect(fill = "white"),
#     # Set the color and the width of the grid lines for the horizontal axis
#     panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
#     # Remove tick marks by setting their length to 0
#     axis.ticks.length = unit(0, "mm"),
#     # Remove the title for both axes
#     axis.title = element_blank(),
#     # Only left line of the vertical axis is painted in black
#     axis.line.y.left = element_line(color = "black"),
#     # But customize labels for the horizontal axis
#     axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
#     axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
#     legend.position = "none", 
#     strip.text = element_text(size = 16)) + 
#   geom_text(aes(x = freq, y = category, label = percent_label),
#     hjust = 0,
#     nudge_x = -0.0001,
#     colour = "black",
#     family = "Econ Sans Cnd",
#     size = 6)+
#   labs(subtitle = "Percent of sum from all articles (%)") + 
#   theme(plot.subtitle = element_text(
#       family = "Econ Sans Cnd",
#       size = 20)
#   ) + 
#   scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
#   facet_wrap(~br_ba, scales = "free", nrow = 2)
# 
# ecol_bar

```

#### Social frequencies

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

  #calculate frequency of bridges vs. barriers being mentioned in articles -- need to add biotic and abiotic indicators cols
# soc_freq <- codes_vars2 %>%
#   subset(select = c("Resource availability", "Pre existing conditions", "Adoption incentives", "Feasibility", "Co management and communication", "Indirect socioeconomic consequences", "Discontinuity", "Cost", "Poor communication and outreach", "Poor program implementation")) %>%
#   gather(category, pres_abs, 1:9) %>%
#   mutate(br_ba = ifelse(category == "Indirect socioeconomic consequences" | category == "Discontinuity" | category == "Poor communication and outreach" | category == "Poor program implementation" | category == "Cost", "Social barrier", "Social bridge")) %>%
#   group_by(category, br_ba)  %>%
#   summarise(n = sum(pres_abs), 
#             freq = (n/118)) %>%
#   mutate(percent_label = scales::percent(freq, accuracy = 2)) %>%
#   group_by(category)
# 
# soc_freq$category <- replace(soc_freq$category, soc_freq$category == "Co management and communication", "Co-management and communication")
# soc_freq$category <- replace(soc_freq$category, soc_freq$category == "Pre existing conditions", "Pre-existing conditions")
# soc_freq$br_ba <- factor(as.factor(soc_freq$br_ba), levels = c("Social bridge", "Social barrier"))
# 
# 
# soc_bar <- ggplot(soc_freq) +
#   geom_bar(aes(x = freq, y = reorder(category, freq), fill = br_ba), width = 0.6, stat = "identity")+
#   scale_x_continuous(position = "top", 
#                      limits = c(0,0.9),
#                      expand = c(0,0), 
#                      breaks = c(0, 0.25, 0.5, 0.75),
#                      labels = my_labs)+
#   scale_y_discrete(expand = expansion(add = c(0,0))) +
#   tidyquant::theme_tq() +
#   theme(
#     # Set background color to white
#     panel.background = element_rect(fill = "white"),
#     # Set the color and the width of the grid lines for the horizontal axis
#     panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
#     # Remove tick marks by setting their length to 0
#     axis.ticks.length = unit(0, "mm"),
#     # Remove the title for both axes
#     axis.title = element_blank(),
#     # Only left line of the vertical axis is painted in black
#     axis.line.y.left = element_line(color = "black"),
#     # But customize labels for the horizontal axis
#     axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
#     axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
#     legend.position = "none", 
#     strip.text = element_text(size = 16)) + 
#   geom_text(aes(x = freq, y = category, label = percent_label),
#     hjust = 0,
#     nudge_x = -0.0001,
#     colour = "black",
#     family = "Econ Sans Cnd",
#     size = 6)+
#   labs(subtitle = "Percent of sum from all articles (%)") + 
#   theme(plot.subtitle = element_text(
#       family = "Econ Sans Cnd",
#       size = 20)
#   ) + 
#   scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
#   facet_wrap(~br_ba, scales = "free", nrow = 2)
# soc_bar

```

#### Regulatory frequencies

:::

## Code appearance frequencies within code categories

Here, I have plotted the same information as the previous section, but as a percentage of the overall bridges and barriers groupings. For example, data bridges make up 37% of all bridge codes. The same pattern holds for the other sub-panels. For example, on the ecological page, abiotic indicators account for 22% of all ecological bridge codes.

::: panel-tabset
#### Broader categories

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

code_sum_s <- code_freq_s %>%
  group_by(bridge_barr) %>%
  mutate(n_total = sum(total)) %>%
  ungroup() %>%
  group_by(code_cat) %>% 
  mutate(n_subtotal = sum(total)) %>%
  summarise(value = n_subtotal/n_total) %>%
  rename("br_ba" = code_cat) %>%
  mutate(percent_label = scales::percent(value, accuracy = 1), 
         percent = if_else(br_ba == "Data barrier" | br_ba == "Ecological barrier" | br_ba == "Social barrier" | br_ba == "Regulation barrier", value, -value),
         code_level = if_else(br_ba %in% c("Ecological barrier", "Ecological bridge"), "Ecological bridge or barrier", 
                              if_else(br_ba %in% c("Data barrier", "Data bridge"), "Data bridge or barrier",
                              if_else(br_ba %in% c("Regulation barrier", "Regulation bridge"), "Regulatory bridge or barrier",
                              if_else(br_ba %in% c("Social barrier", "Social bridge"), "Social bridge or barrier", NA)))), 
         code_brba = if_else(br_ba %in% c("Data bridge", "Ecological bridge", "Social bridge", "Regulation bridge"), "bridge", "barrier")) %>%
  group_by(code_level) %>%
  distinct()

code_sum_s$code_level <- factor(code_sum_s$code_level, levels = c("Ecological bridge or barrier", "Data bridge or barrier","Regulatory bridge or barrier", "Social bridge or barrier"))
code_sum_s$code_brba <- factor(code_sum_s$code_brba, levels = c("bridge", "barrier"))

ggplot(code_sum_s, aes(x = code_level, 
             y = percent,
             fill = code_brba)) +
  geom_col(width = 0.7) +
  geom_text(aes(label = percent_label),
            position = position_stack(vjust = 0.65),
            color = "black", 
            size = 5) +
  ylim(-0.7,0.7)+
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(values = c("goldenrod", "lightskyblue3"), labels = c("Bridge frequency", "Barrier frequency")) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.x =element_blank(),
        axis.text.y = element_text(size = 20, color = "black"),
        panel.grid = element_blank(),
        legend.position = c(-0.17, 0.99),
        legend.text = element_text(size = 16, color = "black"),
        strip.text.y.right = element_text(angle = 0, size = 16)) +
  geom_hline(yintercept = 0.0, linewidth = 1) + 
  labs(fill = "")+ 
  guides(fill = guide_legend(nrow = 1))

```

#### Data codes

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

# data_freq <- code_freq %>%
#   filter(code_cat == "Data bridge" | code_cat == "Data barrier")
# 
# data_sum <- data_freq %>%
#   group_by(bridge_barr) %>%
#   mutate(n_total = sum(total)) %>%
#   ungroup() %>%
#   group_by(code_name) %>% 
#   summarise(value = total/n_total) %>%
#   mutate(code_cat = ifelse(code_name == "Gaps and inaccuracy" | code_name == "Management scales do not align with system needs" | code_name == "Model abuse" | code_name == "Climate change adding uncertainty to target species habitat use", "Data barrier", "Data bridge")) %>%
#   mutate(percent_label = scales::percent(value, accuracy = 2))
#   
# my_labs <- c("0", "25", "50", "75")
# data_sum$code_cat <- factor(as.factor(data_sum$code_cat), levels = c("Data bridge", "Data barrier"))
# 
# ggplot(data_sum) +
#   geom_bar(aes(x = value, y = reorder(code_name, value), fill = code_cat), width = 0.6, stat = "identity")+
#   scale_x_continuous(position = "top", 
#                      limits = c(0,0.9),
#                      expand = c(0,0), 
#                      breaks = c(0, 0.25, 0.5, 0.75),
#                      labels = my_labs)+
#   scale_y_discrete(expand = expansion(add = c(0,0))) +
#   tidyquant::theme_tq() +
#   theme(
#     # Set background color to white
#     panel.background = element_rect(fill = "white"),
#     # Set the color and the width of the grid lines for the horizontal axis
#     panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
#     # Remove tick marks by setting their length to 0
#     axis.ticks.length = unit(0, "mm"),
#     # Remove the title for both axes
#     axis.title = element_blank(),
#     # Only left line of the vertical axis is painted in black
#     axis.line.y.left = element_line(color = "black"),
#     # But customize labels for the horizontal axis
#     axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
#     axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
#     legend.position = "none", 
#     strip.text = element_text(size = 16)) + 
#   geom_text(aes(x = value, y = code_name, label = percent_label),
#     hjust = 0,
#     nudge_x = -0.0001,
#     colour = "black",
#     family = "Econ Sans Cnd",
#     size = 6)+
#   labs(subtitle = "Percent from all data bridges or barriers (%)") + 
#   theme(plot.subtitle = element_text(
#       family = "Econ Sans Cnd",
#       size = 20)
#   ) + 
#   scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
#   facet_wrap(~code_cat, scales = "free", nrow = 2)

```

#### Ecological codes

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

# eco_freq <- code_freq %>%
#   filter(code_cat == "Ecological bridge" | code_cat == "Ecological barrier")
# 
# eco_sum <- eco_freq %>%
#   group_by(bridge_barr) %>%
#   mutate(n_total = sum(total)) %>%
#   ungroup() %>%
#   group_by(code_name) %>% 
#   summarise(value = total/n_total) %>%
#   mutate(code_cat = ifelse(code_name == "Need for multispecies management", "Ecological barrier", "Ecological bridge")) %>%
#   mutate(percent_label = scales::percent(value, accuracy = 2))
#   
# eco_sum$code_cat <- factor(as.factor(eco_sum$code_cat), levels = c("Ecological bridge", "Ecological barrier"))
# my_labs2 <- c("0", "30", "50", "75", "100")
# 
# ggplot(eco_sum) +
#   geom_bar(aes(x = value, y = reorder(code_name, value), fill = code_cat), width = 0.6, stat = "identity")+
#   scale_x_continuous(position = "top", 
#                      limits = c(0,1.1),
#                      expand = c(0,0), 
#                      breaks = c(0, 0.3, 0.5, 0.75, 1),
#                      labels = my_labs2)+
#   scale_y_discrete(expand = expansion(add = c(0,0))) +
#   tidyquant::theme_tq() +
#   theme(
#     # Set background color to white
#     panel.background = element_rect(fill = "white"),
#     # Set the color and the width of the grid lines for the horizontal axis
#     panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
#     # Remove tick marks by setting their length to 0
#     axis.ticks.length = unit(0, "mm"),
#     # Remove the title for both axes
#     axis.title = element_blank(),
#     # Only left line of the vertical axis is painted in black
#     axis.line.y.left = element_line(color = "black"),
#     # But customize labels for the horizontal axis
#     axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
#     axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
#     legend.position = "none", 
#     strip.text = element_text(size = 16)) + 
#   geom_text(aes(x = value, y = code_name, label = percent_label),
#     hjust = 0,
#     nudge_x = -0.0001,
#     colour = "black",
#     family = "Econ Sans Cnd",
#     size = 6)+
#   labs(subtitle = "Percent from all ecological bridges or barriers (%)") + 
#   theme(plot.subtitle = element_text(
#       family = "Econ Sans Cnd",
#       size = 20)
#   ) + 
#   scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
#   facet_wrap(~code_cat, scales = "free", nrow = 2)

```

#### Social codes

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 10
#| fig-align: center

# soc_freq <- code_freq %>%
#   filter(code_cat == "Social bridge" | code_cat == "Social barrier")
# 
# soc_sum <- soc_freq %>%
#   group_by(bridge_barr) %>%
#   mutate(n_total = sum(total)) %>%
#   ungroup() %>%
#   group_by(code_name) %>% 
#   summarise(value = total/n_total) %>%
#   mutate(code_cat = ifelse(code_name == "Cost" | code_name == "Indirect socioeconomic consequences" | code_name == "Discontinuity" | code_name == "Poor communication and outreach" | code_name == "Poor program implementation", "Social barrier", "Social bridge")) %>%
#   mutate(percent_label = scales::percent(value, accuracy = 2))
#   
# soc_sum$code_cat <- factor(as.factor(soc_sum$code_cat), levels = c("Social bridge", "Social barrier"))
# my_labs2 <- c("0", "30")
# 
# ggplot(soc_sum) +
#   geom_bar(aes(x = value, y = reorder(code_name, value), fill = code_cat), width = 0.6, stat = "identity")+
#   scale_x_continuous(position = "top", 
#                      limits = c(0,1),
#                      expand = c(0,0), 
#                      breaks = c(0,0.25, 0.5, 0.75),
#                      labels = my_labs)+
#   scale_y_discrete(expand = expansion(add = c(0,0))) +
#   tidyquant::theme_tq() +
#   theme(
#     # Set background color to white
#     panel.background = element_rect(fill = "white"),
#     # Set the color and the width of the grid lines for the horizontal axis
#     panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
#     # Remove tick marks by setting their length to 0
#     axis.ticks.length = unit(0, "mm"),
#     # Remove the title for both axes
#     axis.title = element_blank(),
#     # Only left line of the vertical axis is painted in black
#     axis.line.y.left = element_line(color = "black"),
#     # But customize labels for the horizontal axis
#     axis.text.x = element_text(family = "Econ Sans Cnd", size = 16), 
#     axis.text.y = element_text(family = "Econ Sans Cnd", size = 16), 
#     legend.position = "none", 
#     strip.text = element_text(size = 16)) + 
#   geom_text(aes(x = value, y = code_name, label = percent_label),
#     hjust = 0,
#     nudge_x = -0.0001,
#     colour = "black",
#     family = "Econ Sans Cnd",
#     size = 6)+
#   labs(subtitle = "Percent from all social bridges or barriers (%)") + 
#   theme(plot.subtitle = element_text(
#       family = "Econ Sans Cnd",
#       size = 20)
#   ) + 
#   scale_fill_manual(values = c("goldenrod", "lightskyblue3"))+
#   facet_wrap(~code_cat, scales = "free", nrow = 2)

```

#### Regulatory codes
:::





