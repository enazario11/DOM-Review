brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_d$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", brba_code1[i])){
code_rel_melt2_d$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", brba_code1[i])){
code_rel_melt2_d$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", brba_code2[i])){
code_rel_melt2_d$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", brba_code2[i])){
code_rel_melt2_d$brba_key2[i] = "Barrier"
}
}
for(i in 1:nrow(code_rel_melt2_d)){
code_temp = code_rel_melt2_d$code2[i]
brba_temp = code_rel_melt2_d %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_d$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_d$brba_code1[i])){
code_rel_melt2_d$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_d$brba_code1[i])){
code_rel_melt2_d$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_d$brba_code2[i])){
code_rel_melt2_d$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_d$brba_code2[i])){
code_rel_melt2_d$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_d <- code_rel_melt2_d %>%
mutate(bor_box = ifelse(total >= 14, "TRUE", "FALSE"),
bor_box = as.factor(bor_box),
code1 = as.factor(code1),
code2 = as.factor(code2))
code_rel_melt2_d$bor_box <- factor(code_rel_melt2_d$bor_box, levels = c("TRUE", "FALSE"))
code_rel_melt2_d <- code_rel_melt2_d %>%
mutate(code1 = reorder(code1, -total, FUN = mean),
code2 = reorder(code2, total, FUN = mean))
brba_colors <- c("Bridge" = "darkolivegreen", "Barrier" = "coral4")
unique_x_groups <- code_rel_melt2_d %>%
distinct(code1, brba_key1) %>%
arrange(code1)
unique_y_groups <- code_rel_melt2_d %>%
distinct(code2, brba_key2) %>%
arrange(code2)
x_colors <- setNames(group_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(group_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
View(unique_x_groups)
x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
ggplot(code_rel_melt2_d, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_d$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_d$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_d <- read.csv(here("data/code_rel_d.csv"))
code_rel_melt_d <- reshape::melt(code_rel_d)
code_rel_melt_d$variable <- gsub(".", " ", code_rel_melt_d$variable, fixed = TRUE)
code_rel_melt_d <- code_rel_melt_d %>%
separate(Code.System, c("key", "code1"), "> ", convert = TRUE)
code_rel_melt_d$key <- str_trim(code_rel_melt_d$key)
colnames(code_rel_melt_d) <- c("brba_code1", "code1", "code2", "total")
code_rel_melt2_d <- code_rel_melt_d
code_rel_melt2_d$brba_code2 <- NA
code_rel_melt2_d$brba_key1 <- NA
code_rel_melt2_d$brba_key2 <- NA
for(i in 1:nrow(code_rel_melt2_d)){
code_temp = code_rel_melt2_d$code2[i]
brba_temp = code_rel_melt2_d %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_d$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_d$brba_code1[i])){
code_rel_melt2_d$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_d$brba_code1[i])){
code_rel_melt2_d$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_d$brba_code2[i])){
code_rel_melt2_d$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_d$brba_code2[i])){
code_rel_melt2_d$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_d <- code_rel_melt2_d %>%
mutate(bor_box = ifelse(total >= 14, "TRUE", "FALSE"),
bor_box = as.factor(bor_box),
code1 = as.factor(code1),
code2 = as.factor(code2))
code_rel_melt2_d$bor_box <- factor(code_rel_melt2_d$bor_box, levels = c("TRUE", "FALSE"))
code_rel_melt2_d <- code_rel_melt2_d %>%
mutate(code1 = reorder(code1, -total, FUN = mean),
code2 = reorder(code2, total, FUN = mean))
brba_colors <- c("Bridge" = "darkolivegreen", "Barrier" = "red4")
unique_x_groups <- code_rel_melt2_d %>%
distinct(code1, brba_key1) %>%
arrange(code1)
unique_y_groups <- code_rel_melt2_d %>%
distinct(code2, brba_key2) %>%
arrange(code2)
x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
ggplot(code_rel_melt2_d, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_d$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_d$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_e <- read.csv(here("data/code_rel_e.csv"))
View(code_rel_e)
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_e <- read.csv(here("data/code_rel_e.csv"))
code_rel_melt_e <- reshape::melt(code_rel_e)
code_rel_melt_e$variable <- gsub(".", " ", code_rel_melt_e$variable, fixed = TRUE)
code_rel_melt_e <- code_rel_melt_e %>%
separate(Code.System, c("key", "code1"), "> ", convert = TRUE)
code_rel_melt_e$key <- str_trim(code_rel_melt_e$key)
colnames(code_rel_melt_e) <- c("brba_code1", "code1", "code2", "total")
code_rel_melt2_e <- code_rel_melt_e
code_rel_melt2_e$brba_code2 <- NA
code_rel_melt2_e$brba_key1 <- NA
code_rel_melt2_e$brba_key2 <- NA
for(i in 1:nrow(code_rel_melt2_e)){
code_temp = code_rel_melt2_e$code2[i]
brba_temp = code_rel_melt2_e %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_e$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_e <- code_rel_melt2_e %>%
mutate(bor_box = ifelse(total >= 14, "TRUE", "FALSE"),
bor_box = as.factor(bor_box),
code1 = as.factor(code1),
code2 = as.factor(code2))
code_rel_melt2_e$bor_box <- factor(code_rel_melt2_e$bor_box, levels = c("TRUE", "FALSE"))
code_rel_melt2_e <- code_rel_melt2_e %>%
mutate(code1 = reorder(code1, -total, FUN = mean),
code2 = reorder(code2, total, FUN = mean))
unique_x_groups <- code_rel_melt2_e %>%
distinct(code1, brba_key1) %>%
arrange(code1)
unique_y_groups <- code_rel_melt2_e %>%
distinct(code2, brba_key2) %>%
arrange(code2)
x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
ggplot(code_rel_melt2_e, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_e$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_e$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
View(code_rel_melt_e)
View(code_rel_melt2_e)
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_e <- read.csv(here("data/code_rel_e.csv"))
code_rel_melt_e <- reshape::melt(code_rel_e)
code_rel_melt_e$variable <- gsub(".", " ", code_rel_melt_e$variable, fixed = TRUE)
code_rel_melt_e <- code_rel_melt_e %>%
separate(Code.System, c("key", "code1"), "> ", convert = TRUE)
code_rel_melt_e$key <- str_trim(code_rel_melt_e$key)
colnames(code_rel_melt_e) <- c("brba_code1", "code1", "code2", "total")
code_rel_melt2_e <- code_rel_melt_e
code_rel_melt2_e$brba_code2 <- NA
code_rel_melt2_e$brba_key1 <- NA
code_rel_melt2_e$brba_key2 <- NA
code_rel_melt2_e$code2[code_rel_melt2_e$code2 == "Fine scale management appropriate for target species"] <- "Fine-scale management appropriate for target species"
code_rel_melt2_e$brba_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Ecological bridge"
for(i in 1:nrow(code_rel_melt2_e)){
code_temp = code_rel_melt2_e$code2[i]
brba_temp = code_rel_melt2_e %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_e$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_e <- code_rel_melt2_e %>%
mutate(bor_box = ifelse(total >= 14, "TRUE", "FALSE"),
bor_box = as.factor(bor_box),
code1 = as.factor(code1),
code2 = as.factor(code2))
code_rel_melt2_e$bor_box <- factor(code_rel_melt2_e$bor_box, levels = c("TRUE", "FALSE"))
code_rel_melt2_e <- code_rel_melt2_e %>%
mutate(code1 = reorder(code1, -total, FUN = mean),
code2 = reorder(code2, total, FUN = mean))
unique_x_groups <- code_rel_melt2_e %>%
distinct(code1, brba_key1) %>%
arrange(code1)
unique_y_groups <- code_rel_melt2_e %>%
distinct(code2, brba_key2) %>%
arrange(code2)
x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
ggplot(code_rel_melt2_e, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_e$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_e$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
code_rel_melt2_e$key_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Bridge"
View(code_rel_melt2_e)
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_e <- read.csv(here("data/code_rel_e.csv"))
code_rel_melt_e$variable <- gsub(".", " ", code_rel_melt_e$variable, fixed = TRUE)
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_e <- read.csv(here("data/code_rel_e.csv"))
code_rel_melt_e <- reshape::melt(code_rel_e)
code_rel_melt_e$variable <- gsub(".", " ", code_rel_melt_e$variable, fixed = TRUE)
code_rel_melt_e <- code_rel_melt_e %>%
separate(Code.System, c("key", "code1"), "> ", convert = TRUE)
code_rel_melt_e$key <- str_trim(code_rel_melt_e$key)
colnames(code_rel_melt_e) <- c("brba_code1", "code1", "code2", "total")
code_rel_melt2_e <- code_rel_melt_e
code_rel_melt2_e$brba_code2 <- NA
code_rel_melt2_e$brba_key1 <- NA
code_rel_melt2_e$brba_key2 <- NA
code_rel_melt2_e$code2[code_rel_melt2_e$code2 == "Fine scale management appropriate for target species"] <- "Fine-scale management appropriate for target species"
code_rel_melt2_e$brba_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Ecological bridge"
code_rel_melt2_e$key_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Bridge"
for(i in 1:nrow(code_rel_melt2_e)){
code_temp = code_rel_melt2_e$code2[i]
brba_temp = code_rel_melt2_e %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_e$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_e$key_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Bridge"
View(code_rel_melt2_e)
code_rel_melt2_e$key_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Bridge"
View(code_rel_melt2_e)
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_e <- read.csv(here("data/code_rel_e.csv"))
code_rel_melt_e <- reshape::melt(code_rel_e)
code_rel_melt_e$variable <- gsub(".", " ", code_rel_melt_e$variable, fixed = TRUE)
code_rel_melt_e <- code_rel_melt_e %>%
separate(Code.System, c("key", "code1"), "> ", convert = TRUE)
code_rel_melt_e$key <- str_trim(code_rel_melt_e$key)
colnames(code_rel_melt_e) <- c("brba_code1", "code1", "code2", "total")
code_rel_melt2_e <- code_rel_melt_e
code_rel_melt2_e$brba_code2 <- NA
code_rel_melt2_e$brba_key1 <- NA
code_rel_melt2_e$brba_key2 <- NA
code_rel_melt2_e$code2[code_rel_melt2_e$code2 == "Fine scale management appropriate for target species"] <- "Fine-scale management appropriate for target species"
code_rel_melt2_e$brba_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Ecological bridge"
for(i in 1:nrow(code_rel_melt2_e)){
code_temp = code_rel_melt2_e$code2[i]
brba_temp = code_rel_melt2_e %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_e$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code1[i])){
code_rel_melt2_e$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_e$brba_code2[i])){
code_rel_melt2_e$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_e$brba_code2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Ecological bridge"
View(code_rel_melt2_e)
code_rel_melt2_e$brba_key2[code_rel_melt2_e$code2 == "Target species is a prey specialist"] <- "Bridge"
code_rel_melt2_e <- code_rel_melt2_e %>%
mutate(bor_box = ifelse(total >= 14, "TRUE", "FALSE"),
bor_box = as.factor(bor_box),
code1 = as.factor(code1),
code2 = as.factor(code2))
code_rel_melt2_e$bor_box <- factor(code_rel_melt2_e$bor_box, levels = c("TRUE", "FALSE"))
code_rel_melt2_e <- code_rel_melt2_e %>%
mutate(code1 = reorder(code1, -total, FUN = mean),
code2 = reorder(code2, total, FUN = mean))
unique_x_groups <- code_rel_melt2_e %>%
distinct(code1, brba_key1) %>%
arrange(code1)
unique_y_groups <- code_rel_melt2_e %>%
distinct(code2, brba_key2) %>%
arrange(code2)
x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
ggplot(code_rel_melt2_e, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_e$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_e$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
quantile(code_rel_melt2_e$total, 0.9)
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_s <- read.csv(here("data/code_rel_s.csv"))
code_rel_melt_s <- reshape::melt(code_rel_s)
code_rel_melt_s$variable <- gsub(".", " ", code_rel_melt_s$variable, fixed = TRUE)
code_rel_melt_s <- code_rel_melt_s %>%
separate(Code.System, c("key", "code1"), "> ", convert = TRUE)
code_rel_melt_s$key <- str_trim(code_rel_melt_s$key)
colnames(code_rel_melt_s) <- c("brba_code1", "code1", "code2", "total")
code_rel_melt2_s <- code_rel_melt_s
code_rel_melt2_s$brba_code2 <- NA
code_rel_melt2_s$brba_key1 <- NA
code_rel_melt2_s$brba_key2 <- NA
code_rel_melt2_s$code2[code_rel_melt2_s$code2 == "Pre existing regulation and management institutions"] <- "Pre-existing regulation and management institutions"
code_rel_melt2_s$code2[code_rel_melt2_s$code2 == "Co management and communication"] <- "Co-management and communication"
for(i in 1:nrow(code_rel_melt2_s)){
code_temp = code_rel_melt2_s$code2[i]
brba_temp = code_rel_melt2_s %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_s$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_s$brba_code1[i])){
code_rel_melt2_s$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_s$brba_code1[i])){
code_rel_melt2_s$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_s$brba_code2[i])){
code_rel_melt2_s$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_s$brba_code2[i])){
code_rel_melt2_s$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_s <- code_rel_melt2_s %>%
mutate(bor_box = ifelse(total >= 5, "TRUE", "FALSE"),
bor_box = as.factor(bor_box),
code1 = as.factor(code1),
code2 = as.factor(code2))
code_rel_melt2_s$bor_box <- factor(code_rel_melt2_s$bor_box, levels = c("TRUE", "FALSE"))
code_rel_melt2_s <- code_rel_melt2_s %>%
mutate(code1 = reorder(code1, -total, FUN = mean),
code2 = reorder(code2, total, FUN = mean))
unique_x_groups <- code_rel_melt2_s %>%
distinct(code1, brba_key1) %>%
arrange(code1)
unique_y_groups <- code_rel_melt2_s %>%
distinct(code2, brba_key2) %>%
arrange(code2)
x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
ggplot(code_rel_melt2_s, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_s$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_s$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 7
#| fig-align: center
code_rel_s <- read.csv(here("data/code_rel_s.csv"))
code_rel_melt_s <- reshape::melt(code_rel_s)
code_rel_melt_s$variable <- gsub(".", " ", code_rel_melt_s$variable, fixed = TRUE)
code_rel_melt_s <- code_rel_melt_s %>%
separate(Code.System, c("key", "code1"), "> ", convert = TRUE)
code_rel_melt_s$key <- str_trim(code_rel_melt_s$key)
colnames(code_rel_melt_s) <- c("brba_code1", "code1", "code2", "total")
code_rel_melt2_s <- code_rel_melt_s
code_rel_melt2_s$brba_code2 <- NA
code_rel_melt2_s$brba_key1 <- NA
code_rel_melt2_s$brba_key2 <- NA
code_rel_melt2_s$code2[code_rel_melt2_s$code2 == "Pre existing regulation and management institutions"] <- "Pre-existing regulation and management institutions"
code_rel_melt2_s$code2[code_rel_melt2_s$code2 == "Co management and communication"] <- "Co-management and communication"
for(i in 1:nrow(code_rel_melt2_s)){
code_temp = code_rel_melt2_s$code2[i]
brba_temp = code_rel_melt2_s %>% filter(code1 == code_temp & code2 == code_temp)
brba_code_temp = brba_temp$brba_code1[1]
code_rel_melt2_s$brba_code2[i] <- brba_code_temp
if(grepl("Bridge", code_rel_melt2_s$brba_code1[i])){
code_rel_melt2_s$brba_key1[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_s$brba_code1[i])){
code_rel_melt2_s$brba_key1[i] = "Barrier"
}
if(grepl("Bridge", code_rel_melt2_s$brba_code2[i])){
code_rel_melt2_s$brba_key2[i] = "Bridge"
} else if(grepl("Barrier", code_rel_melt2_s$brba_code2[i])){
code_rel_melt2_s$brba_key2[i] = "Barrier"
}
}
code_rel_melt2_s <- code_rel_melt2_s %>%
mutate(bor_box = ifelse(total >= 5, "TRUE", "FALSE"),
bor_box = as.factor(bor_box),
code1 = as.factor(code1),
code2 = as.factor(code2))
code_rel_melt2_s$bor_box <- factor(code_rel_melt2_s$bor_box, levels = c("TRUE", "FALSE"))
code_rel_melt2_s <- code_rel_melt2_s %>%
mutate(code1 = reorder(code1, -total, FUN = mean),
code2 = reorder(code2, total, FUN = mean))
unique_x_groups <- code_rel_melt2_s %>%
distinct(code1, brba_key1) %>%
arrange(code1)
unique_y_groups <- code_rel_melt2_s %>%
distinct(code2, brba_key2) %>%
arrange(code2)
x_colors <- setNames(brba_colors[unique_x_groups$brba_key1], unique_x_groups$code1)
y_colors <- setNames(brba_colors[unique_y_groups$brba_key2], unique_y_groups$code2)
ggplot(code_rel_melt2_s, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_s$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_s$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
ggplot(code_rel_melt2_s, aes(reorder(code1, -total), reorder(code2, total))) +
geom_tile(aes(fill = total, colour = bor_box)) +
scale_fill_gradient2(high = "red")+
ylab("")+
xlab("")+
labs(fill = "Number of co-occurences")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, face = "bold", color = x_colors[levels(code_rel_melt2_s$code1)]),
axis.text.y = element_text(size = 12, face = "bold", color = y_colors[levels(code_rel_melt2_s$code2)]))+
geom_text(aes(label = total))+
scale_color_manual(values = c("black", "#00000000"))+
guides(color = "none")
quantile(code_rel_melt2_s$total, 0.9)
